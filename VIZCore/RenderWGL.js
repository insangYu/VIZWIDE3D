class RenderWGL{constructor(a,b){let c=this,d=a['gl']['TRIANGLES'],e=new Map(),f=function(m){let n={'id':m,'positionBuffer':undefined,'normalBuffer':undefined,'uvBuffer':undefined,'colorBuffer':undefined,'indexBuffer':undefined};return n;},g=new Map();function h(){let m={'id':'','listProcess':[],'query':undefined,'queryInProgress':![],'occluded':![],'renderEnableOcclusion':![]};return m;};function i(){let m={'start':0x0,'length':0x0,'action':null,'processKind':0x0};return m;};j();function j(){e['clear'](),g['clear']();}function k(m,n){return a['Util']['EqualAction'](m,n);}this['InitRenderPipeline']=function(m){let n=g['get'](m['uuid']);if(!m['flag']['updateProcess'])return n;let o=undefined;n!==undefined&&(o=n['query']);{n=h(),n['id']=m['uuid'],g['set'](m['uuid'],n);if(a['useWebGL2']){if(o===undefined)n['query']=a['gl']['createQuery']();else n['query']=o;}}let p=0x0,q=0x0,r=a['Data']['ActionItem']();if(m['attribs']['a_index']!==null)for(let s=0x0;s<m['tag']['length'];s++){let t=m['tag'][s];{}if(p>0x0){if(k(t['action'],r))p+=t['m_nTris'];else{let u=i();u['start']=q,u['length']=p,u['processKind']=0x0,u['action']=a['Data']['ActionItem'](),u['action']['visible']=r['visible'],u['action']['selection']=r['selection'],u['action']['transform']['copy'](r['transform']),u['action']['color']=r['color'],u['action']['transformIdx']=r['transformIdx'],u['action']['material']=r['material'],u['action']['customColor']=r['customColor'],n['listProcess']['push'](u),p=0x0;}}p===0x0&&t['action']['visible']&&(q=t['m_triIdx'],p=t['m_nTris'],r['visible']=t['action']['visible'],r['selection']=t['action']['selection'],r['transform']['copy'](t['action']['transform']),r['color']=t['action']['color'],r['transformIdx']=t['action']['transformIdx'],r['material']=t['action']['material'],r['customColor']=t['action']['customColor']);if(p>0x0&&m['tag']['length']-0x1===s){let v=i();v['start']=q,v['length']=p,v['processKind']=0x0,v['action']=a['Data']['ActionItem'](),v['action']['visible']=r['visible'],v['action']['selection']=r['selection'],v['action']['transform']['copy'](r['transform']),v['action']['color']=r['color'],v['action']['material']=r['material'],v['action']['customColor']=r['customColor'],v['action']['transformIdx']=r['transformIdx'],n['listProcess']['push'](v);}}return m['flag']['updateProcess']=![],m['flag']['renderEnable']=!![],n;},this['InitRenderPipelineSample']=function(m,n){let o=g['get'](m['uuid']);if(!m['flag']['updateProcess'])return o;let p=undefined;o!==undefined&&(p=o['query']);{o=h(),o['id']=m['uuid'],g['set'](m['uuid'],o),a['useWebGL2']&&(o['query']=p);}if(n===undefined)n=new b['Matrix4']();if(m['attribs']['a_index']!==null){let q=0xf618,r=Math['ceil'](m['attribs']['a_index']['array']['length']/q),s=0x0;for(let t=0x0;t<r;t++){let u=m['attribs']['a_index']['array']['length']-t*q;u>q&&(u=q);let v=i();v['start']=s,v['length']=u,v['processKind']=0x0,v['action']=a['Data']['ActionItem'](),v['action']['visible']=!![],v['action']['selection']=![],v['action']['transform']['copy'](n),o['listProcess']['push'](v),s+=u;}}return m['flag']['updateProcess']=![],m['flag']['renderEnable']=!![],o;},this['InitRenderPipelineByWireframe']=function(m,n){l(m,n);};function l(m,n){if(!m['flag']['updateProcess'])return n;let o=0x0,p=0x0,q=a['Data']['ActionItem']();if(m['attribs']['a_index']['buffer']!==null){if(m['attribs']['sub']['a_wireframe']['buffer']===null){let t=[],u=0x0;for(let v=0x0;v<m['attribs']['a_index']['array']['length']/0x3;v++){t[u]=m['attribs']['a_index']['array'][v*0x3],u++,t[u]=m['attribs']['a_index']['array'][v*0x3+0x1],u++,t[u]=m['attribs']['a_index']['array'][v*0x3+0x1],u++,t[u]=m['attribs']['a_index']['array'][v*0x3+0x2],u++,t[u]=m['attribs']['a_index']['array'][v*0x3+0x2],u++,t[u]=m['attribs']['a_index']['array'][v*0x3],u++;}m['attribs']['sub']['a_wireframe']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['sub']['a_wireframe']['buffer']),a['gl']['bufferData'](a['gl']['ELEMENT_ARRAY_BUFFER'],new Uint16Array(t),a['gl']['STATIC_DRAW']);}let r=0x0,s=0xf618;for(let w=0x0;w<m['tag']['length'];w++){let x=m['tag'][w];if(o>0x0){if(k(x['action'],q)&&o+x['m_nTris']*0x2<s)o+=x['m_nTris']*0x2;else{let y=i();y['start']=p,y['length']=o,y['processKind']=0x1,y['action']=a['Data']['ActionItem'](),y['action']['visible']=q['visible'],y['action']['selection']=q['selection'],y['action']['transform']['copy'](q['transform']),y['action']['color']=q['color'],y['action']['transformIdx']=q['transformIdx'],y['action']['material']=q['material'],n['listProcess']['push'](y),o=0x0;}}o===0x0&&x['action']['visible']&&(p=r+x['m_triIdx']*0x2,o=x['m_nTris']*0x2,q['visible']=x['action']['visible'],q['selection']=x['action']['selection'],q['transform']['copy'](x['action']['transform']),q['color']=x['action']['color'],q['transformIdx']=x['action']['transformIdx'],q['material']=x['action']['material']);if(o>0x0&&m['tag']['length']-0x1===w){let z=i();z['start']=p,z['length']=o,z['processKind']=0x1,z['action']=a['Data']['ActionItem'](),z['action']['visible']=q['visible'],z['action']['selection']=q['selection'],z['action']['transform']['copy'](q['transform']),z['action']['color']=q['color'],z['action']['material']=q['material'],z['action']['transformIdx']=q['transformIdx'],n['listProcess']['push'](z);}}}m['flag']['updateProcess']=![],m['flag']['renderEnable']=!![];}this['ClearProcess']=function(){let m=function(o,p,q){if(o['query']!==undefined)gl['deleteQuery'](o['query']);};g['forEach'](m),g['clear']();let n=function(o,p,q){if(o['positionBuffer']!==undefined)a['gl']['deleteBuffer'](o['positionBuffer']);if(o['normalBuffer']!==undefined)a['gl']['deleteBuffer'](o['normalBuffer']);if(o['uvBuffer']!==undefined)a['gl']['deleteBuffer'](o['uvBuffer']);if(o['colorBuffer']!==undefined)a['gl']['deleteBuffer'](o['colorBuffer']);if(o['indexBuffer']!==undefined)a['gl']['deleteBuffer'](o['indexBuffer']);};e['forEach'](n),e['clear']();},this['GetPipeline']=function(m){return g['get'](m);},this['DeletePipeline']=function(m){g['delete'](m);},this['SetGLDrawMode']=function(m){d=m;},this['SetDataByObject']=function(m){let n=![];m['attribs']['a_index']['buffer']===null&&m['attribs']['a_index']['array']['length']>0x0&&(m['attribs']['a_index']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']),a['gl']['bufferData'](a['gl']['ELEMENT_ARRAY_BUFFER'],new Uint16Array(m['attribs']['a_index']['array']),a['gl']['STATIC_DRAW']),n=!![]);m['attribs']['a_position']['buffer']===null&&m['attribs']['a_position']['array']['length']>0x0&&(m['attribs']['a_position']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(m['attribs']['a_position']['array']),a['gl']['STATIC_DRAW']),n=!![]);m['attribs']['a_normal']['buffer']===null&&m['attribs']['a_normal']['array']['length']>0x0&&(m['attribs']['a_normal']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(m['attribs']['a_normal']['array']),a['gl']['STATIC_DRAW']),n=!![]);if(a['UV_DEBUG'])m['attribs']['a_uv']['buffer']===null&&m['attribs']['a_uv']['array']['length']>0x0&&(m['attribs']['a_uv']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_uv']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(m['attribs']['a_uv']['array']),a['gl']['STATIC_DRAW']),n=!![]);m['attribs']['a_color']['buffer']===null&&m['attribs']['a_color']['array']['length']>0x0&&(m['attribs']['a_color']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_color']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Uint8Array(m['attribs']['a_color']['array']),a['gl']['STATIC_DRAW']),n=!![]);m['attribs']['a_matrixIndex']!==undefined&&(m['attribs']['a_matrixIndex']['buffer']===null&&m['attribs']['a_position']['array']['length']>0x0&&m['attribs']['a_matrixIndex']['array']['length']>0x0&&(m['attribs']['a_matrixIndex']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_matrixIndex']['buffer']),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Uint16Array(m['attribs']['a_matrixIndex']['array']),a['gl']['STATIC_DRAW']),n=!![]));if(m['attribs']['sub']['biped']!==undefined){if(m['attribs']['sub']['biped']['a_biped']['buffer']===null&&m['attribs']['sub']['biped']['a_biped']['array']['length']>0x0){m['attribs']['sub']['biped']['a_biped']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['sub']['biped']['a_biped']['buffer']);let o=[],p=0x0;for(let q=0x0;q<m['attribs']['sub']['biped']['a_biped']['array']['length'];q++){for(let r=0x0;r<0x4;r++){o[p]=m['attribs']['sub']['biped']['a_biped']['array'][q][r],p++;}}a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(o),a['gl']['STATIC_DRAW']),n=!![];}if(m['attribs']['sub']['biped']['a_weight']['buffer']===null&&m['attribs']['sub']['biped']['a_weight']['array']['length']>0x0){m['attribs']['sub']['biped']['a_weight']['buffer']=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['sub']['biped']['a_weight']['buffer']);let s=[],t=0x0;for(let u=0x0;u<m['attribs']['sub']['biped']['a_weight']['array']['length'];u++){for(let v=0x0;v<0x4;v++){s[t]=m['attribs']['sub']['biped']['a_weight']['array'][u][v],t++;}}a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(s),a['gl']['STATIC_DRAW']),n=!![];}}n&&(m['flag']['updateProcess']=!![]);},this['ReleaseDataByObject']=function(m){m['attribs']['a_index']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_index']['buffer']),m['attribs']['a_index']['buffer']=null,m['attribs']['a_index']['array']=[]);m['attribs']['a_position']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_position']['buffer']),m['attribs']['a_position']['buffer']=null,m['attribs']['a_position']['array']=[]);m['attribs']['a_normal']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_normal']['buffer']),m['attribs']['a_normal']['buffer']=null,m['attribs']['a_normal']['array']=[]);if(a['UV_DEBUG'])m['attribs']['a_uv']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_uv']['buffe']),m['attribs']['a_uv']['buffer']=null,m['attribs']['a_uv']['array']=[]);m['attribs']['a_color']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_color']['buffer']),m['attribs']['a_color']['buffer']=null,m['attribs']['a_color']['array']=[]),m['attribs']['a_matrixIndex']!==undefined&&(m['attribs']['a_matrixIndex']['buffer']===null&&(a['gl']['deleteBuffer'](m['attribs']['a_matrixIndex']['buffer']),m['attribs']['a_matrixIndex']['buffer']=null,m['attribs']['a_matrixIndex']['array']=[])),m['attribs']['sub']['a_wireframe']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['sub']['a_wireframe']['buffer']),m['attribs']['sub']['a_wireframe']['buffer']=null),m['attribs']['sub']['biped']!==undefined&&(m['attribs']['sub']['biped']['a_biped']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['sub']['biped']['a_biped']['buffer']),m['attribs']['sub']['biped']['a_biped']['buffer']=null),m['attribs']['sub']['biped']['a_weight']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['sub']['biped']['a_weight']['buffer']),m['attribs']['sub']['biped']['a_weight']['buffer']=null));},this['RemoveGLBuffer']=function(m,n){if(!m['flag']['cache'])return;if(n===undefined)n=![];m['attribs']['a_index']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_index']['buffer']),m['attribs']['a_index']['buffer']=null),m['attribs']['a_position']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_position']['buffer']),m['attribs']['a_position']['buffer']=null),m['attribs']['a_normal']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_normal']['buffer']),m['attribs']['a_normal']['buffer']=null),a['UV_DEBUG']&&(m['attribs']['a_uv']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_uv']['buffer']),m['attribs']['a_uv']['buffer']=null)),m['attribs']['a_color']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_color']['buffer']),m['attribs']['a_color']['buffer']=null),m['attribs']['a_matrixIndex']!==undefined&&(m['attribs']['a_matrixIndex']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['a_matrixIndex']['buffer']),m['attribs']['a_matrixIndex']['buffer']=null)),m['attribs']['sub']['a_wireframe']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['sub']['a_wireframe']['buffer']),m['attribs']['sub']['a_wireframe']['buffer']=null),m['attribs']['sub']['biped']['a_biped']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['sub']['biped']['a_biped']['buffer']),m['attribs']['sub']['biped']['a_biped']['buffer']=null),m['attribs']['sub']['biped']['a_weight']['buffer']!==null&&(a['gl']['deleteBuffer'](m['attribs']['sub']['biped']['a_weight']['buffer']),m['attribs']['sub']['biped']['a_weight']['buffer']=null);},this['UpdateOcclusion']=function(m){if(a['Renderer']['enableOcclusion']===![])return;if(a['Renderer']['occlusionProcessCount']>0x400)return;gl['colorMask'](![],![],![],![]),gl['depthMask'](![]);let n=new b['Color'](0xff,0xff,0xff,0xff);a['Shader']['BeginShader'](b['Enum']['SHADER_TYPES']['BASIC2D']),UpdateRenderProcessByObjectOcclusion_v2(m,n),a['Shader']['EndShader'](),gl['colorMask'](!![],!![],!![],!![]),gl['depthMask'](!![]);},this['UpdateRenderProcessByTriangles']=function(m,n){let o=a['gl']['createBuffer'](),p=[],q=a['gl']['createBuffer'](),r=[],s=0x0;for(let y=0x0;y<m['length'];y++){let z=s,A=s;p[z]=m[y]['vertex']['v1']['x'],z++,p[z]=m[y]['vertex']['v1']['y'],z++,p[z]=m[y]['vertex']['v1']['z'],z++,p[z]=m[y]['vertex']['v2']['x'],z++,p[z]=m[y]['vertex']['v2']['y'],z++,p[z]=m[y]['vertex']['v2']['z'],z++,p[z]=m[y]['vertex']['v3']['x'],z++,p[z]=m[y]['vertex']['v3']['y'],z++,p[z]=m[y]['vertex']['v3']['z'],z++,a['Shader']['normalAttributeLocation']>=0x0&&(r[A]=m[y]['normal']['v1']['x'],A++,r[A]=m[y]['normal']['v1']['y'],A++,r[A]=m[y]['normal']['v1']['z'],A++,r[A]=m[y]['normal']['v2']['x'],A++,r[A]=m[y]['normal']['v2']['y'],A++,r[A]=m[y]['normal']['v2']['z'],A++,r[A]=m[y]['normal']['v3']['x'],A++,r[A]=m[y]['normal']['v3']['y'],A++,r[A]=m[y]['normal']['v3']['z'],A++),s=z;}a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],o),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(p),a['gl']['STATIC_DRAW']);a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],q),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(r),a['gl']['STATIC_DRAW']));a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],o);let t=0x3,u=a['gl']['FLOAT'],v=![],w=0x0,x=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],t,u,v,w,x);a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],q),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],t,u,v,w,x));{const B=new b['Matrix4']()['copy'](a['Camera']['matMV']),C=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](C,B);let D=n;if(D===undefined)D=new b['Color']();let E=D['glColor']();a['Shader']['SetGLColor'](E['r'],E['g'],E['b'],E['a']),a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,s);}a['gl']['deleteBuffer'](o),a['gl']['deleteBuffer'](q);},this['UpdateRenderProcessByObject_v2']=function(m,n){if(!m['flag']['renderEnable'])return;let o=g['get'](m['uuid']);if(o===undefined)return;if(o['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']){if(o['occluded'])return;if(!o['renderEnableOcclusion'])return;}else{if(!m['flag']['renderEnable'])return;}let p=a['Renderer']['GetWireframeMode']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let q=0x3,r=a['gl']['FLOAT'],s=![],t=0x0,u=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],q,r,s,t,u),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],q,r,s,t,u);a['UV_DEBUG']&&(a['Shader']['uvAttributeLocation']>=0x0&&(m['attribs']['a_uv']['buffer']!==null?(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_uv']['buffer']),a['gl']['enableVertexAttribArray'](a['Shader']['uvAttributeLocation']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)):a['gl']['disableVertexAttribArray'](a['Shader']['uvAttributeLocation'])));if(p&&m['attribs']['sub']['a_wireframe']['buffer']===undefined)p=![];if(!p)a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);else a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['sub']['a_wireframe']['buffer']);let v=m['tag'][0x0],w=v['color'],x=d;if(p)d=a['gl']['LINES'];{const z=new b['Matrix4']()['copy'](a['Camera']['matMV']),A=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](A,z);}let y=new b['Matrix4']();for(let B=0x0;B<o['listProcess']['length'];B++){let C=o['listProcess'][B];if(p&&C['processKind']==0x0)continue;if(!p&&C['processKind']==0x1)continue;let D=w,E=![];C['action']['color']!==undefined&&(D=C['action']['color']);if(C['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['SHADED'])D=a['Configuration']['Model']['Selection']['Color'],a['Shader']['SetGLMaterial'](-0x1);else{if(C['action']['customColor'])C['action']['color']!==undefined&&(D=C['action']['color']);else{a['Shader']['SetGLMaterial'](C['action']['material']);if(C['action']['material']>=0x0){let G=a['Material']['GetMaterial'](C['action']['material']);G!==undefined&&(D=G['color']);}a['Renderer']['GetXrayMode']()&&(D=a['Renderer']['GetXrayModeColor']());}}if(n&&D['a']===0xff)continue;if(!n&&D['a']!==0xff)continue;let F=D['glColor']();a['Shader']['SetGLColor'](F['r'],F['g'],F['b'],F['a']);if(a['Shader']['GetUseUpdateMatrixManager']()&&C['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](m['uuid'],C['action']['transformIdx']),m['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](m['uuid'],-0x1);if(!y['equals'](C['action']['transform'])){y['copy'](C['action']['transform']);const H=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],y),I=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],H);a['Shader']['SetMatrix'](I,H);}}a['gl']['drawElements'](d,C['length'],a['gl']['UNSIGNED_SHORT'],C['start']*0x2);}d=x;},this['UpdateRenderProcessByPickObject_v2']=function(m){if(!m['flag']['renderEnable'])return;let n=g['get'](m['uuid']);if(n===undefined)return;if(n['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&n['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let o=0x3,p=a['gl']['FLOAT'],q=![],r=0x0,s=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],o,p,q,r,s);m['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&m['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],q,r,s));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);let t=m['tag'][0x0],u=t['color'];{const w=new b['Matrix4']()['copy'](a['Camera']['matMV']),x=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](x,w);}let v=new b['Matrix4']();for(let y=0x0;y<n['listProcess']['length'];y++){let z=n['listProcess'][y];if(z['processKind']===0x1)continue;if(a['Configuration']['Model']['Selection']['Kind']===b['Enum']['SelectionObject3DTypes']['OPAQUE_OBJECT3D']){let A=u;if(z['action']['customColor'])z['action']['color']!==undefined&&(A=z['action']['color']);else{if(z['action']['material']>=0x0){let B=a['Material']['GetMaterial'](z['action']['material']);if(B!==undefined)A=B['color'];}a['Renderer']['GetXrayMode']()&&(A=a['Renderer']['GetXrayModeColor']());}if(A['a']<0xff)continue;}if(!v['equals'](z['action']['transform'])){v['copy'](z['action']['transform']);const C=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],v),D=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],C);a['Shader']['SetMatrix'](D,C);}a['gl']['drawElements'](d,z['length'],a['gl']['UNSIGNED_SHORT'],z['start']*0x2);}},this['UpdateRenderProcessBySelectObject_v2']=function(m){if(!m['flag']['renderEnable'])return;let n=g['get'](m['uuid']);if(n===undefined)return;if(n['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let o=0x3,p=a['gl']['FLOAT'],q=![],r=0x0,s=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],o,p,q,r,s);a['Shader']['colorAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],q,r,s));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);{const u=new b['Matrix4']();u['copy'](a['Camera']['cameraMatrix']);const v=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],u);a['Shader']['SetMatrix'](v,u),a['Shader']['SetClipping'](u);}let t=new b['Matrix4']();for(let w=0x0;w<n['listProcess']['length'];w++){let x=n['listProcess'][w];if(!x['action']['selection'])continue;if(x['processKind']!==0x0)continue;if(a['Shader']['GetUseUpdateMatrixManager']()&&x['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](m['uuid'],x['action']['transformIdx']),m['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](m['uuid'],-0x1);if(!t['equals'](x['action']['transform'])){t['copy'](x['action']['transform']);const y=new b['Matrix4']()['multiplyMatrices'](a['Camera']['cameraMatrix'],t),z=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],y);a['Shader']['SetMatrix'](z,y);}}a['gl']['drawElements'](a['gl']['TRIANGLES'],x['length'],a['gl']['UNSIGNED_SHORT'],x['start']*0x2);}},this['UpdateRenderProcessByColorID_v2']=function(m){if(!m['flag']['renderEnable'])return;let n=g['get'](m['uuid']);if(n===undefined)return;if(n['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&n['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let o=0x3,p=a['gl']['FLOAT'],q=![],r=0x0,s=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],o,p,q,r,s);m['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&m['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],q,r,s));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);{const u=new b['Matrix4']()['copy'](a['Camera']['matMV']),v=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](v,u);}let t=new b['Matrix4']();for(let w=0x0;w<n['listProcess']['length'];w++){let x=n['listProcess'][w];if(x['processKind']===0x1)continue;if(!t['equals'](x['action']['transform'])){t['copy'](x['action']['transform']);const y=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],t),z=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],y);a['Shader']['SetMatrix'](z,y);}a['gl']['drawElements'](d,x['length'],a['gl']['UNSIGNED_SHORT'],x['start']*0x2);}},this['UpdateRenderProcessByColorIDByMatrix_v2']=function(m,n,o){if(!m['flag']['renderEnable'])return;let p=g['get'](m['uuid']);if(p===undefined)return;if(p['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&p['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let q=0x3,r=a['gl']['FLOAT'],s=![],t=0x0,u=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],q,r,s,t,u);m['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['colorAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],s,t,u));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);{const w=new b['Matrix4']()['copy'](o),x=new b['Matrix4']()['multiplyMatrices'](n,o);a['Shader']['SetMatrix'](x,w),a['Shader']['SetClipping'](w);}let v=new b['Matrix4']();for(let y=0x0;y<p['listProcess']['length'];y++){let z=p['listProcess'][y];if(z['processKind']!==0x0)continue;if(a['Shader']['GetUseUpdateMatrixManager']()&&z['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](m['uuid'],z['action']['transformIdx']),m['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](m['uuid'],-0x1);if(!v['equals'](z['action']['transform'])){v['copy'](z['action']['transform']);const A=new b['Matrix4']()['multiplyMatrices'](o,v),B=new b['Matrix4']()['multiplyMatrices'](n,A);a['Shader']['SetMatrix'](B,A);}}a['gl']['drawElements'](d,z['length'],a['gl']['UNSIGNED_SHORT'],z['start']*0x2);}},this['UpdateRenderProcessByObjectOneColor_v2']=function(m,n){if(!m['flag']['renderEnable'])return;let o=g['get'](m['uuid']);if(o===undefined)return;if(o['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&o['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let p=0x3,q=a['gl']['FLOAT'],r=![],s=0x0,t=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],p,q,r,s,t);m['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],p,q,r,s,t));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);{a['Shader']['SetMatrix'](a['Camera']['matMVP'],a['Camera']['matMV']);let v=n===undefined?new b['Color'](0x0,0x0,0x0,0xff):n,w=v['glColor']();a['Shader']['SetGLColor'](w['r'],w['g'],w['b'],w['a']);}let u=new b['Matrix4']();for(let x=0x0;x<o['listProcess']['length'];x++){let y=o['listProcess'][x];if(y['processKind']===0x1)continue;if(a['Shader']['GetUseUpdateMatrixManager']()&&y['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](m['uuid'],y['action']['transformIdx']),m['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](m['uuid'],-0x1,-0x1);if(!u['equals'](y['action']['transform'])){u['copy'](y['action']['transform']);const z=new b['Matrix4']()['multiplyMatrices'](a['Camera']['cameraMatrix'],u),A=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],z);a['Shader']['SetMatrix'](A,z);}}a['gl']['drawElements'](d,y['length'],a['gl']['UNSIGNED_SHORT'],y['start']*0x2);}},this['UpdateRenderProcessByAnimationObject_v2']=function(m){if(!m['flag']['renderEnable'])return;let n=g['get'](m['uuid']);if(n===undefined)return;if(n['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&n['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let o=0x3,p=a['gl']['FLOAT'],q=![],r=0x0,s=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],o,p,q,r,s),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],o,p,q,r,s);a['UV_DEBUG']&&(m['attribs']['a_uv']['buffer']!==null&&a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_uv']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)));a['Shader']['subBipedIdxAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['sub']['biped']['a_biped']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedIdxAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['subBipedWeightAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['sub']['biped']['a_weight']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedWeightAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);let t=m['tag'][0x0],u=t['color'];{const w=new b['Matrix4']()['copy'](a['Camera']['matMV']),x=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](x,w);}let v=new b['Matrix4']();for(let y=0x0;y<n['listProcess']['length'];y++){let z=n['listProcess'][y];if(z['processKind']===0x1)continue;let A=u;z['action']['color']!==undefined&&(A=z['action']['color']);if(z['action']['selection']&&a['Configuration']['Model']['Selection']['Mode']===b['Enum']['SelectionVisibleMode']['SHADED'])A=a['Configuration']['Model']['Selection']['Color'],a['Shader']['SetGLMaterial'](-0x1);else{a['Shader']['SetGLMaterial'](z['action']['material']);if(z['action']['material']>=0x0){let C=a['Material']['GetMaterial'](z['action']['material']);if(C!==undefined)A=C['color'];}}let B=A['glColor']();a['Shader']['SetGLColor'](B['r'],B['g'],B['b'],B['a']);if(!v['equals'](z['action']['transform'])){v['copy'](z['action']['transform']);const D=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],v),E=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],D);a['Shader']['SetMatrix'](E,D);}a['gl']['drawElements'](a['gl']['TRIANGLES'],z['length'],a['gl']['UNSIGNED_SHORT'],z['start']*0x2);}},this['UpdateRenderProcessByAnimationObjectOneColor_v2']=function(m,n){if(!m['flag']['renderEnable'])return;let o=g['get'](m['uuid']);if(o===undefined)return;if(o['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&o['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let p=0x3,q=a['gl']['FLOAT'],r=![],s=0x0,t=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],p,q,r,s,t);m['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],p,q,r,s,t));a['UV_DEBUG']&&(m['attribs']['a_uv']['buffer']!==null&&a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_uv']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)));a['Shader']['subBipedIdxAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['sub']['biped']['a_biped']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedIdxAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['subBipedWeightAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['sub']['biped']['a_weight']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedWeightAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);{const v=new b['Matrix4']()['copy'](a['Camera']['matMV']),w=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](w,v);}let u=new b['Matrix4']();for(let x=0x0;x<o['listProcess']['length'];x++){let y=o['listProcess'][x];if(y['processKind']===0x1)continue;let z=n,A=z['glColor']();a['Shader']['SetGLColor'](A['r'],A['g'],A['b'],A['a']);if(!u['equals'](y['action']['transform'])){u['copy'](y['action']['transform']);const B=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],u),C=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],B);a['Shader']['SetMatrix'](C,B);}a['gl']['drawElements'](a['gl']['TRIANGLES'],y['length'],a['gl']['UNSIGNED_SHORT'],y['start']*0x2);}},this['UpdateRenderProcessByPickAnimationObject_v2']=function(m){if(!m['flag']['renderEnable'])return;let n=g['get'](m['uuid']);if(n===undefined)return;if(n['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&n['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let o=0x3,p=a['gl']['FLOAT'],q=![],r=0x0,s=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],o,p,q,r,s);a['Shader']['colorAttributeLocation']>=0x0&&m['attribs']['a_color']['buffer']!==null&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_color']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['colorAttributeLocation'],0x4,a['gl']['UNSIGNED_BYTE'],q,r,s));a['Shader']['subBipedIdxAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['sub']['biped']['a_biped']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedIdxAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['Shader']['subBipedWeightAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['sub']['biped']['a_weight']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['subBipedWeightAttributeLocation'],0x4,a['gl']['FLOAT'],![],0x0,0x0));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);{const u=new b['Matrix4']()['copy'](a['Camera']['matMV']),v=new b['Matrix4']()['copy'](a['Camera']['matMVP']);a['Shader']['SetMatrix'](v,u);}let t=new b['Matrix4']();for(let w=0x0;w<n['listProcess']['length'];w++){let x=n['listProcess'][w];if(!t['equals'](x['action']['transform'])){t['copy'](x['action']['transform']);const y=new b['Matrix4']()['multiplyMatrices'](a['Camera']['matMV'],t),z=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],y);a['Shader']['SetMatrix'](z,y);}a['gl']['drawElements'](a['gl']['TRIANGLES'],x['length'],a['gl']['UNSIGNED_SHORT'],x['start']*0x2);}},this['UpdateRenderProcessByLinesOneColor_v2']=function(m,n){if(!m['flag']['renderEnable'])return;let o=g['get'](m['uuid']);if(o===undefined)return;if(o['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(a['Renderer']['enableOcclusion']&&o['occluded'])return;a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let p=0x3,q=a['gl']['FLOAT'],r=![],s=0x0,t=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],p,q,r,s,t);let u=a['gl']['getAttribLocation'](a['Shader']['currentProgram'],'a_nextPosition');u>=0x0&&(a['gl']['enableVertexAttribArray'](u),a['gl']['vertexAttribPointer'](u,p,q,r,0x0,0x3));m['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],p,q,r,s,t));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);{a['Shader']['SetMatrix'](a['Camera']['matMVP'],a['Camera']['matMV']);let w=n===undefined?new b['Color'](0x0,0x0,0x0,0xff):n,x=w['glColor']();a['Shader']['SetGLColor'](x['r'],x['g'],x['b'],x['a']);}let v=new b['Matrix4']();for(let y=0x0;y<o['listProcess']['length'];y++){let z=o['listProcess'][y];if(z['processKind']===0x1)continue;if(a['Shader']['GetUseUpdateMatrixManager']()&&z['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](m['uuid'],z['action']['transformIdx']),m['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](m['uuid'],-0x1,-0x1);if(!v['equals'](z['action']['transform'])){v['copy'](z['action']['transform']);const A=new b['Matrix4']()['multiplyMatrices'](a['Camera']['cameraMatrix'],v),B=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],A);a['Shader']['SetMatrix'](B,A);}}a['gl']['drawElements'](a['gl']['LINES'],z['length'],a['gl']['UNSIGNED_SHORT'],z['start']*0x2);}u>=0x0&&a['gl']['disableVertexAttribArray'](u);},this['UpdateRenderProcessByObjectOcclusion_v2']=function(m,n){let o=g['get'](m['uuid']);if(o===undefined)return;if(o['query']===undefined)return;if(o['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(o['queryInProgress']&&a['gl']['getQueryParameter'](o['query'],a['gl']['QUERY_RESULT_AVAILABLE'])){let v=!a['gl']['getQueryParameter'](o['query'],a['gl']['QUERY_RESULT']);v!=o['occluded']&&(o['renderEnableOcclusion']=!v),o['occluded']=v,o['queryInProgress']=![],a['Renderer']['occlusionProcessCount']--;}if(o['occluded'])a['Renderer']['AddOcclusionCullingCount']();if(o['queryInProgress']){o['renderEnableOcclusion']=!o['occluded'];return;}if(!m['flag']['renderEnable'])return;if(o['listProcess']['length']<=0x0)return;if(m['attribs']['a_index']['buffer']===null)return;if(o['queryInProgress'])return;a['gl']['beginQuery'](a['gl']['ANY_SAMPLES_PASSED_CONSERVATIVE'],o['query']),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_position']['buffer']);let p=0x3,q=a['gl']['FLOAT'],r=![],s=0x0,t=0x0;a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],p,q,r,s,t);m['attribs']['a_normal']['buffer']!==null&&a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_normal']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],p,q,r,s,t));a['gl']['bindBuffer'](a['gl']['ELEMENT_ARRAY_BUFFER'],m['attribs']['a_index']['buffer']);{a['Shader']['SetMatrix'](a['Camera']['matMVP'],a['Camera']['matMV']);let w=n===undefined?new b['Color'](0x0,0x0,0x0,0xff):n,x=w['glColor']();a['Shader']['SetGLColor'](x['r'],x['g'],x['b'],x['a']);}let u=new b['Matrix4']();for(let y=0x0;y<o['listProcess']['length'];y++){let z=o['listProcess'][y];if(z['processKind']===0x1)continue;if(a['Shader']['GetUseUpdateMatrixManager']()&&z['action']['transformIdx']>0x0)a['Shader']['SetUpdateModelMatrixData'](m['uuid'],z['action']['transformIdx']),m['attribs']['a_matrixIndex']['buffer']!==null&&a['Shader']['updateMatrixAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['attribs']['a_matrixIndex']['buffer']),a['gl']['vertexAttribPointer'](a['Shader']['updateMatrixAttributeLocation'],0x3,a['gl']['UNSIGNED_SHORT'],![],0x0,0x0));else{a['Shader']['SetUpdateModelMatrixData'](m['uuid'],-0x1,-0x1);if(!u['equals'](z['action']['transform'])){u['copy'](z['action']['transform']);const A=new b['Matrix4']()['multiplyMatrices'](a['Camera']['cameraMatrix'],u),B=new b['Matrix4']()['multiplyMatrices'](a['Camera']['projectionMatrix'],A);a['Shader']['SetMatrix'](B,A);}}a['gl']['drawElements'](a['gl']['TRIANGLES'],z['length'],a['gl']['UNSIGNED_SHORT'],z['start']*0x2);}a['gl']['endQuery'](a['gl']['ANY_SAMPLES_PASSED_CONSERVATIVE']),o['queryInProgress']=!![],a['Renderer']['occlusionProcessCount']++,o['renderEnableOcclusion']=!o['occluded'];},this['Util_RenderQuad']=function(m){let n=undefined;if(m===undefined||!m)n=e['get'](0x0);else n=e['get'](0x1);if(n===undefined){let o;m===undefined||!m?(o=[-0x1,-0x1,0x0,0x1,-0x1,0x0,-0x1,0x1,0x0,0x1,0x1,0x0],n=f(0x0)):(o=[-0x1,0x1,0x0,0x1,0x1,0x0,-0x1,-0x1,0x0,0x1,-0x1,0x0],n=f(0x1));let p=[0x0,0x0,0x1,0x0,0x0,0x1,0x1,0x1],q=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],q),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(o),a['gl']['STATIC_DRAW']);let r=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(p),a['gl']['STATIC_DRAW']),n['positionBuffer']=q,n['uvBuffer']=r,e['set'](n['id'],n);}a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],n['positionBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],n['uvBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLE_STRIP'],0x0,0x4);},this['Util_RenderCube']=function(){let m=e['get'](0x2);if(m===undefined){m=f(0x2);let n=[-0x1,-0x1,-0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,0x1,0x1,-0x1,-0x1,-0x1,-0x1,-0x1,0x1,-0x1,-0x1,-0x1,0x1,0x1,-0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,-0x1,0x1,0x1,-0x1,-0x1,0x1,-0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,-0x1,-0x1,-0x1,-0x1,-0x1,-0x1,-0x1,0x1,-0x1,0x1,0x1,0x1,0x1,0x1,0x1,-0x1,-0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,0x1,0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,-0x1,0x1,-0x1,-0x1,0x1,-0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,0x1,-0x1,-0x1,-0x1,-0x1,0x1,-0x1,0x1,0x1,0x1,0x1,0x1,-0x1,0x1,0x1,0x1,-0x1,0x1,-0x1,-0x1,0x1,0x1],o=[0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,-0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x0,0x1,0x0],p=[0x0,0x0,0x1,0x1,0x1,0x0,0x1,0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x1,0x0,0x1,0x1,0x1,0x1,0x0,0x1,0x0,0x0,0x1,0x0,0x1,0x1,0x0,0x1,0x0,0x1,0x0,0x0,0x1,0x0,0x1,0x0,0x0,0x1,0x1,0x1,0x0,0x1,0x1,0x0,0x0,0x0,0x0,0x1,0x1,0x1,0x1,0x0,0x1,0x0,0x0,0x0,0x0,0x1,0x0,0x1,0x1,0x0,0x1,0x1,0x1,0x0,0x0,0x1,0x0,0x0],q=a['gl']['createBuffer']();a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],q),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(n),a['gl']['STATIC_DRAW']);let r=undefined;r=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],r),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(o),a['gl']['STATIC_DRAW']);let s=undefined;s=a['gl']['createBuffer'](),a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],s),a['gl']['bufferData'](a['gl']['ARRAY_BUFFER'],new Float32Array(p),a['gl']['STATIC_DRAW']),m['positionBuffer']=q,m['normalBuffer']=r,m['uvBuffer']=s,e['set'](m['id'],m);}a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['positionBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['positionAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0),a['Shader']['normalAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['normalBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['normalAttributeLocation'],0x3,a['gl']['FLOAT'],![],0x0,0x0)),a['Shader']['uvAttributeLocation']>=0x0&&(a['gl']['bindBuffer'](a['gl']['ARRAY_BUFFER'],m['uvBuffer']),a['gl']['vertexAttribPointer'](a['Shader']['uvAttributeLocation'],0x2,a['gl']['FLOAT'],![],0x0,0x0)),a['gl']['drawArrays'](a['gl']['TRIANGLES'],0x0,0x24);};}}export default RenderWGL;