let ShaderGLSL=function(a){let b=this;this['ShadingLanguage']=undefined,this['ShadingLanguage_v1']={'Basic':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_TRIPLANAR','varying\x20vec3\x20vWorldPos;','#endif','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20\x20\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','#ifdef\x20SHADING_TRIPLANAR','\x20\x20\x20vWorldPos\x20=\x20updatePosition;','#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','#ifdef\x20SHADING_TRIPLANAR','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','varying\x20vec3\x20vWorldPos;','#endif','uniform\x20bool\x20ubUseGraySacle;','float\x20dfd(vec2\x20p)\x20{\x20','return\x20p.x\x20*\x20p.x\x20-\x20p.y;','}','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20texColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','#ifdef\x20SHADING_TRIPLANAR','\x20\x20\x20vec3\x20world_normal\x20=\x20vWorldPos;','if(world_normal.x\x20>=\x201527208.5\x20&&\x20world_normal.y\x20>=\x202773888.0\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x203825013.25\x20&&\x20world_normal.y\x20<=\x205606348.5\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x201527208.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202297804.75);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x202773888.0);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202832460.5);','}','if(world_normal.x\x20>=\x203823475.5\x20&&\x20world_normal.y\x20>=\x202778586.5\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x206012677.0\x20&&\x20world_normal.y\x20<=\x205612678.5\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x203823475.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202189201.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x202778586.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202834092.0);','}','if(world_normal.x\x20>=\x203833331.5\x20&&\x20world_normal.y\x20>=\x2058852.18\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x206020032.0\x20&&\x20world_normal.y\x20<=\x202780283.25\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x203833331.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202186700.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x2058852.18);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202721431.0);','}','if(world_normal.x\x20>=\x201534491.75\x20&&\x20world_normal.y\x20>=\x2051843.3\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x203834849.75\x20&&\x20world_normal.y\x20<=\x202780290.75\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x201534491.75);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202300357.25);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x2051843.3);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202728447.5);','}','\x20\x20\x20world_normal.z\x20=\x200.0;','\x09vec3\x20blending\x20=\x20world_normal;','\x20\x20\x20vec3\x20uvs\x20=\x20blending;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20uvs.xy);','\x09\x20\x20\x20\x20texColor\x20=\x20texColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20texture2D(u_texNormal,\x20uvs.xy).rgb;','\x09\x20\x20\x20\x20texNormal\x20=\x20normalize((texNormal*2.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20lightDir\x20=\x20TBN*lightDir;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','#endif','\x09float\x20lambertian\x20=\x20max(dot(lightDir,\x20normal),\x200.0);','\x09float\x20specular\x20=\x200.0;','\x09if\x20(lambertian\x20>\x200.0)','\x09{','\x09\x09vec3\x20viewDir\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09\x09vec3\x20halfDir\x20=\x20normalize(lightDir\x20+\x20viewDir);','\x09\x09float\x20specAngle\x20=\x20max(dot(halfDir,\x20normal),\x200.0);','\x09\x09specular\x20=\x20pow(specAngle,\x20shininess\x20*\x20128.0);','\x09}','\x09vec3\x20colorLinear\x20=\x20vAmbientColor\x20+','\x09\x09clamp((lambertian*1.0)\x20*\x20vDirectionalLightColor,\x200.0,\x201.0);','\x09vec3\x20colorGammaCorrected\x20=\x20colorLinear\x20*\x20texColor.rgb;','\x09colorGammaCorrected\x20=\x20clamp(colorGammaCorrected,\x200.0,\x201.0);','\x09colorGammaCorrected\x20=\x20colorGammaCorrected\x20+','\x09\x09vSpecColor\x20*\x20specular\x20*\x200.5;','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(colorGammaCorrected.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20gl_FragColor\x20=\x20vec4(colorGammaCorrected,\x20baseAlpha);','}']['join']('\x0a')},'BasicUtil':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','void\x20main()\x20{','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20texColor\x20=\x20vec3(1.0,\x201.0,\x201.0);','\x09texColor\x20=\x20u_color.rgb;','\x09float\x20lambertian\x20=\x20max(dot(lightDir,\x20normal),\x200.0);','\x09float\x20specular\x20=\x200.0;','\x09if\x20(lambertian\x20>\x200.0)','\x09{','\x09\x09vec3\x20viewDir\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09\x09vec3\x20halfDir\x20=\x20normalize(lightDir\x20+\x20viewDir);','\x09\x09float\x20specAngle\x20=\x20max(dot(halfDir,\x20normal),\x200.0);','\x09\x09specular\x20=\x20pow(specAngle,\x20shininess\x20*\x20128.0);','\x09}','\x09vec3\x20colorLinear\x20=\x20vAmbientColor\x20+','\x09\x09clamp((lambertian*1.0)\x20*\x20vDirectionalLightColor,\x200.0,\x201.0);','\x09vec3\x20colorGammaCorrected\x20=\x20colorLinear\x20*\x20texColor.rgb;','\x09colorGammaCorrected\x20=\x20clamp(colorGammaCorrected,\x200.0,\x201.0);','\x09colorGammaCorrected\x20=\x20colorGammaCorrected\x20+','\x09\x09vSpecColor\x20*\x20specular\x20*\x200.5;','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(colorGammaCorrected.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20gl_FragColor\x20=\x20vec4(colorGammaCorrected,\x20u_color.a);','}']['join']('\x0a')},'PBR':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vGLPosition\x20=\x20vec3(position)/\x20position.w;','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','uniform\x20int\x20ubUsePrevDpeth;','uniform\x20sampler2D\x20u_PrevDpeth;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20utexCubeMapLod0;','uniform\x20samplerCube\x20utexCubeMapLod1;','uniform\x20float\x20fRoughnessLod;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20fRoughness;','uniform\x20float\x20fMetallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','\x0a#ifdef\x20SHADING_ENVIRONMENT','vec3\x20ComputeEnvColor(float\x20roughness_lod,\x20vec3\x20refl)','{','\x09float\x20a\x20=\x20roughness_lod\x20*\x20roughness_lod;','\x09vec3\x20lod0\x20=\x20textureCube(utexCubeMapLod0,\x20refl).rgb;','\x09vec3\x20lod1\x20=\x20textureCube(utexCubeMapLod1,\x20refl).rgb;','\x09return\x20mix(lod1,\x20lod0,\x20a);','}','\x0a#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x20\x20\x20if(ubUsePrevDpeth\x20==\x201)\x20{','\x20\x20\x20\x20\x20\x20\x20vec2\x20depthCoord\x20=\x20vec2(vGLPosition.x\x20*\x200.5\x20+\x200.5,\x20vGLPosition.y\x20*\x200.5\x20+\x200.5);','\x09\x20\x20\x20\x20vec4\x20prevDepth\x20=\x20texture2D(u_PrevDpeth,\x20depthCoord);','\x20\x20\x20\x20\x20\x20\x20float\x20srcD1\x20=\x20(vGLPosition.z\x20*\x200.5\x20+\x200.5)\x20*\x20step(ubPerspectiveView,\x200.5);','\x20\x20\x20\x20\x20\x20\x20float\x20srcD2\x20=\x20vGLPosition.z\x20*\x20step(0.5,\x20ubPerspectiveView);','\x20\x20\x20\x20\x20\x20\x20if(prevDepth.a\x20!=\x200.0)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(srcD1\x20+\x20srcD2\x20>=\x20prevDepth.a)','\x09\x20\x20\x20\x20\x20\x20\x20\x20{','\x09\x20\x20\x20\x20\x20\x20\x20\x20\x09discard;','\x09\x20\x20\x20\x20\x20\x20\x20\x20\x09return;','\x09\x20\x20\x20\x20\x20\x20\x20\x20}','\x09\x20\x20\x20\x20}','\x20\x20\x20}','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09float\x20roughness\x20=\x20mix(0.1,\x201.0,\x20fRoughness);','\x09float\x20metallic\x20=\x20mix(0.1,\x200.98,\x20fMetallic);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20normalize((texture2D(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20L\x20=\x20TBN*L;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normal;','\x09vec3\x20F0\x20=\x20vec3(shininess)\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(0.000,\x20dot(N,\x20V));','\x09float\x20AO\x20=\x201.0;','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x09vec3\x20diffuse\x20=\x20mix(baseColor.rgb,\x20vec3(0.0),\x20metallic);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09vec3\x20envSpecular\x20=\x20vec3(0.0);','\x0a#ifdef\x20SHADING_ENVIRONMENT','\x09vec3\x20R\x20=\x20reflect(V\x20*\x20-1.0,\x20N);','\x09vec3\x20envColor\x20=\x20ComputeEnvColor(fRoughnessLod,\x20R);','\x09envSpecular\x20=\x20envColor\x20*\x20kSA;','\x20\x20\x20ambient\x20=\x20envColor;','\x0a#endif','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x09{','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20baseColor.rgb\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL','\x09\x09\x09+\x20vDirectionalLightColor\x20*\x20vSpecColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20envSpecular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x09gl_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','}']['join']('\x0a')},'AnimationPBR':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec4\x20a_bipedIdx;','attribute\x20vec4\x20a_bipedWeight;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20vec3(0,\x200,\x200);','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20bipedIdx[4];\x20bipedIdx[0]\x20=\x20int(a_bipedIdx.x);\x20bipedIdx[1]\x20=\x20int(a_bipedIdx.y);\x20bipedIdx[2]\x20=\x20int(a_bipedIdx.z);\x20bipedIdx[3]\x20=\x20int(a_bipedIdx.w);','\x20\x20\x20\x20\x20\x20\x20float\x20bipedWeight[4];\x20bipedWeight[0]\x20=\x20a_bipedWeight.x;\x20bipedWeight[1]\x20=\x20a_bipedWeight.y;\x20bipedWeight[2]\x20=\x20a_bipedWeight.z;\x20bipedWeight[3]\x20=\x20a_bipedWeight.w;','\x20\x20\x20\x20\x20\x20\x20for(int\x20w\x20=\x200;\x20w\x20<\x204;\x20w++)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(bipedWeight[w]\x20==\x200.0)\x20continue;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20bipedIdx[w]\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(a_position,\x201.0);','\x09\x20\x20\x20\x20\x20\x20\x20\x20updatePosition\x20+=\x20vec3(vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w)\x20*\x20bipedWeight[w];','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20updatePosition\x20=\x20a_position;','\x20\x20\x20}','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vGLPosition\x20=\x20vec3(position)\x20/\x20position.w;','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','uniform\x20int\x20ubUsePrevDpeth;','uniform\x20sampler2D\x20u_PrevDpeth;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20utexCubeMapLod0;','uniform\x20samplerCube\x20utexCubeMapLod1;','uniform\x20float\x20fRoughnessLod;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20fRoughness;','uniform\x20float\x20fMetallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','\x0a#ifdef\x20SHADING_ENVIRONMENT','vec3\x20ComputeEnvColor(float\x20roughness_lod,\x20vec3\x20refl)','{','\x09float\x20a\x20=\x20roughness_lod\x20*\x20roughness_lod;','\x09vec3\x20lod0\x20=\x20textureCube(utexCubeMapLod0,\x20refl).rgb;','\x09vec3\x20lod1\x20=\x20textureCube(utexCubeMapLod1,\x20refl).rgb;','\x09return\x20mix(lod1,\x20lod0,\x20a);','}','\x0a#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09float\x20roughness\x20=\x20mix(0.1,\x201.0,\x20fRoughness);','\x09float\x20metallic\x20=\x20mix(0.1,\x200.98,\x20fMetallic);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20normalize((texture2D(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20L\x20=\x20TBN*L;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normal;','\x09vec3\x20F0\x20=\x20vec3(shininess)\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(0.000,\x20dot(N,\x20V));','\x09float\x20AO\x20=\x201.0;','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x09vec3\x20diffuse\x20=\x20mix(baseColor.rgb,\x20vec3(0.0),\x20metallic);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09vec3\x20envSpecular\x20=\x20vec3(0.0);','\x0a#ifdef\x20SHADING_ENVIRONMENT','\x09vec3\x20R\x20=\x20reflect(V\x20*\x20-1.0,\x20N);','\x09vec3\x20envColor\x20=\x20ComputeEnvColor(fRoughnessLod,\x20R);','\x09envSpecular\x20=\x20envColor\x20*\x20kSA;','\x20\x20\x20ambient\x20=\x20envColor;','\x0a#endif','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x09{','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20baseColor.rgb\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL','\x09\x09\x09+\x20vDirectionalLightColor\x20*\x20vSpecColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20envSpecular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x09gl_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','}']['join']('\x0a')},'Picking':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20float\x20u_PointSize;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec4\x20vColor;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x20\x20\x20vColor\x20=\x20vec4(float(a_color.x)\x20/\x20255.0,\x20float(a_color.y)\x20/\x20255.0,\x20float(a_color.z)\x20/\x20255.0,\x20float(a_color.w)\x20/\x20255.0);','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec4\x20vColor;','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20gl_FragColor\x20=\x20vColor;','}']['join']('\x0a')},'Texture2D':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec4\x20u_color;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20tex\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x20\x20\x20gl_FragColor\x20=\x20u_color\x20*\x20tex;','}']['join']('\x0a')},'Basic2D':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'AnimationBasic2D':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','varying\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec4\x20a_bipedIdx;','attribute\x20vec4\x20a_bipedWeight;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20vec3(0,\x200,\x200);','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20bipedIdx[4];\x20bipedIdx[0]\x20=\x20int(a_bipedIdx.x);\x20bipedIdx[1]\x20=\x20int(a_bipedIdx.y);\x20bipedIdx[2]\x20=\x20int(a_bipedIdx.z);\x20bipedIdx[3]\x20=\x20int(a_bipedIdx.w);','\x20\x20\x20\x20\x20\x20\x20float\x20bipedWeight[4];\x20bipedWeight[0]\x20=\x20a_bipedWeight.x;\x20bipedWeight[1]\x20=\x20a_bipedWeight.y;\x20bipedWeight[2]\x20=\x20a_bipedWeight.z;\x20bipedWeight[3]\x20=\x20a_bipedWeight.w;','\x20\x20\x20\x20\x20\x20\x20for(int\x20w\x20=\x200;\x20w\x20<\x204;\x20w++)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(bipedWeight[w]\x20==\x200.0)\x20continue;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20bipedIdx[w]\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(a_position,\x201.0);','\x09\x20\x20\x20\x20\x20\x20\x20\x20updatePosition\x20+=\x20vec3(vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w)\x20*\x20bipedWeight[w];','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20updatePosition\x20=\x20a_position;','\x20\x20\x20}','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20vec4\x20u_color;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'BasicLines2D':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_nextPosition;','attribute\x20vec3\x20a_normal;','uniform\x20float\x20u_Tickness;','uniform\x20vec2\x20u_Resolution;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_ProjectionMatrix;','void\x20main()\x20{','\x20\x20\x20float\x20miter\x20=\x201.0;','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','\x20\x20\x20updatePosition\x20=\x20updatePosition\x20+\x20(a_normal\x20*\x20u_Tickness\x20*\x200.5\x20*\x20miter);','\x09vec4\x20vPos\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20vPos;','\x20\x20\x20return;','\x09vec4\x20vPosition\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20vec4\x20vNextPosition\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position\x20+\x20(a_normal\x20*\x20u_Tickness\x20*\x200.5\x20*\x20miter),\x201.0);','\x20\x20\x20vec2\x20v1\x20=\x20vec2(vPosition.xy\x20/\x20vPosition.w);','\x20\x20\x20vec2\x20v2\x20=\x20vec2(vNextPosition.xy\x20/\x20vNextPosition.w);','\x20\x20\x20float\x20aspect\x20=\x20u_Resolution.x\x20/\x20u_Resolution.y;','\x20\x20\x20v1.x\x20/=\x20aspect;','\x20\x20\x20v2.x\x20/=\x20aspect;','\x20\x20\x20float\x20len\x20=\x20length(v2\x20-\x20v1);','\x20\x20\x20if(len\x20>\x200.0)\x20{','\x20\x20\x20vec2\x20vDir\x20=\x20normalize(v2\x20-\x20v1);','\x20\x20\x20vec2\x20normal\x20=\x20vec2(-vDir.y,\x20vDir.x);','\x20\x20\x20normal\x20=\x20normal\x20*\x20u_Tickness\x20*\x200.5;','\x20\x20\x20normal.x\x20/=\x20aspect;','\x20\x20\x20vec4\x20offset\x20=\x20vec4(normal,\x200.0,\x200.0);','\x20\x20\x20vPosition\x20=\x20vPosition\x20+\x20offset;','\x20\x20\x20}','\x20\x20\x20gl_Position\x20=\x20vPosition;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','uniform\x20vec2\x20u_Resolution;','float\x20DistToLine(vec2\x20pt1,\x20vec2\x20pt2,\x20vec2\x20vPt)','{','\x20\x20\x20\x20vec2\x20lineDir\x20=\x20pt2\x20-\x20pt1;','\x20\x20\x20\x20vec2\x20perpDir\x20=\x20vec2(lineDir.y,\x20-lineDir.x);','\x20\x20\x20\x20vec2\x20dirToPt1\x20=\x20pt1\x20-\x20vPt;','\x20\x20\x20\x20return\x20abs(dot(normalize(perpDir),\x20dirToPt1));','}','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'FXAA':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec2\x20uTexScale;','uniform\x20sampler2D\x20u_Texture;','varying\x20vec2\x20vUV;','const\x20float\x20FXAA_SPAN_MAX\x20=\x208.0;','const\x20float\x20FXAA_REDUCE_MUL\x20=\x201.0\x20/\x208.0;','const\x20float\x20FXAA_REDUCE_MIN\x20=\x201.0\x20/\x20128.0;','void\x20main()\x20{','\x09vec3\x20rgbNW\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(-1.0,-1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbNE\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(1.0,-1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbSW\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(-1.0,1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbSE\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(1.0,1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbM\x20=\x20texture2D(u_Texture,\x20vUV).rgb;','\x09vec3\x20luma\x20=\x20vec3(0.299,\x200.587,\x200.114);','\x09float\x20lumaNW\x20=\x20dot(rgbNW,\x20luma);','\x09float\x20lumaNE\x20=\x20dot(rgbNE,\x20luma);','\x09float\x20lumaSW\x20=\x20dot(rgbSW,\x20luma);','\x09float\x20lumaSE\x20=\x20dot(rgbSE,\x20luma);','\x09float\x20lumaM\x20=\x20dot(rgbM,\x20\x20luma);','\x09float\x20lumaMin\x20=\x20min(lumaM,\x20min(min(lumaNW,\x20lumaNE),\x20min(lumaSW,\x20lumaSE)));','\x09float\x20lumaMax\x20=\x20max(lumaM,\x20max(max(lumaNW,\x20lumaNE),\x20max(lumaSW,\x20lumaSE)));','\x09vec2\x20dir;','\x09dir.x\x20=\x20-((lumaNW\x20+\x20lumaNE)\x20-\x20(lumaSW\x20+\x20lumaSE));','\x09dir.y\x20=\x20((lumaNW\x20+\x20lumaSW)\x20-\x20(lumaNE\x20+\x20lumaSE));','\x09float\x20dirReduce\x20=\x20max(','\x09\x09(lumaNW\x20+\x20lumaNE\x20+\x20lumaSW\x20+\x20lumaSE)\x20*\x20(0.25\x20*\x20FXAA_REDUCE_MUL),','\x09\x09FXAA_REDUCE_MIN);','\x09float\x20rcpDirMin\x20=\x201.0\x20/\x20(min(abs(dir.x),\x20abs(dir.y))\x20+\x20dirReduce);','\x09dir\x20=\x20min(vec2(FXAA_SPAN_MAX,\x20\x20FXAA_SPAN_MAX),','\x09\x09max(vec2(-FXAA_SPAN_MAX,\x20-FXAA_SPAN_MAX),','\x09\x09\x09dir\x20*\x20rcpDirMin))\x20/\x20uTexScale;','\x09vec3\x20rgbA\x20=\x20(1.0\x20/\x202.0)\x20*\x20(','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(1.0\x20/\x203.0\x20-\x200.5)).rgb\x20+','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(2.0\x20/\x203.0\x20-\x200.5)).rgb);','\x09vec3\x20rgbB\x20=\x20rgbA\x20*\x20(1.0\x20/\x202.0)\x20+\x20(1.0\x20/\x204.0)\x20*\x20(','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(0.0\x20/\x203.0\x20-\x200.5)).rgb\x20+','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(3.0\x20/\x203.0\x20-\x200.5)).rgb);','\x09float\x20lumaB\x20=\x20dot(rgbB,\x20luma);','\x09float\x20alpha\x20=\x20texture2D(u_Texture,\x20vUV).a;','\x09if\x20((lumaB\x20<\x20lumaMin)\x20||\x20(lumaB\x20>\x20lumaMax))\x20{','\x09\x09gl_FragColor\x20=\x20vec4(rgbA.rgb,\x20alpha);','\x09}','\x09else\x20{','\x09\x09gl_FragColor\x20=\x20vec4(rgbB.rgb,\x20alpha);','\x09}','}']['join']('\x0a')},'Depth':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vGLPosition\x20=\x20vec3(position)\x20/\x20position.w;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4.xyz)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20float\x20ubPerspectiveView;','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20const\x20float\x20DEPTH_MAX\x20=\x2016777215.0;','\x20\x20\x20float\x20d1\x20=\x20(vGLPosition.z\x20*\x200.5\x20+\x200.5)\x20*\x20step(ubPerspectiveView,\x200.5);','\x20\x20\x20float\x20d2\x20=\x20vGLPosition.z\x20*\x20step(0.5,\x20ubPerspectiveView);','\x20\x20\x20float\x20d\x20=\x20floor((d1+d2)\x20*\x20DEPTH_MAX);','\x20\x20\x20float\x20depth1\x20=\x20shMod(d,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth2\x20=\x20shMod(d\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth3\x20=\x20shMod((d\x20/\x20256.0)\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth4\x20=\x20d1\x20+\x20d2;','\x20\x20\x20gl_FragColor\x20=\x20vec4(depth1,\x20depth2,\x20depth3,\x20depth4);','}']['join']('\x0a')},'Edge':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec2\x20uTexScale;','uniform\x20vec4\x20u_color;','varying\x20vec2\x20vUV;','void\x20main()\x20{','vec2\x20invSize\x20=\x20vec2(\x201.0\x20/\x20uTexScale.x,\x201.0\x20/\x20uTexScale.y);','float\x20dxtex\x20=\x20invSize.x;','float\x20dytex\x20=\x20invSize.y;','\x09mat3\x20matEdgeX\x20=\x20mat3(','\x09\x090.0,\x20-1.0,\x200.0,','\x09\x090.0,\x201.0,\x200.0,','\x09\x090.0,\x200.0,\x200.0','\x09);','\x09mat3\x20matEdgeY\x20=\x20mat3(','\x09\x090.0,\x200.0,\x200.0,','\x09\x09-1.0,\x201.0,\x200.0,','\x09\x090.0,\x200.0,\x200.0','\x09);','mat3\x20matSample\x20=\x20mat3(','\x090.0,\x200.0,\x200.0,','\x090.0,\x200.0,\x200.0,','\x090.0,\x200.0,\x200.0',');','for\x20(int\x20i\x20=\x20-1;\x20i<2;\x20i++)','{','\x09for\x20(int\x20j\x20=\x20-1;\x20j<2;\x20j++)','\x09{','\x09\x09vec3\x20sample\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20vec2(float(i)\x20*\x20dxtex,\x20float(j)\x20*\x20dytex)).rgb;','\x09\x09matSample[i\x20+\x201][j\x20+\x201]\x20=\x20length(sample);','\x09}','}','float\x20gx\x20=\x20dot(matEdgeX[0],\x20matSample[0])\x20+\x20dot(matEdgeX[1],\x20matSample[1])\x20+\x20dot(matEdgeX[2],\x20matSample[2]);','float\x20gy\x20=\x20dot(matEdgeY[0],\x20matSample[0])\x20+\x20dot(matEdgeY[1],\x20matSample[1])\x20+\x20dot(matEdgeY[2],\x20matSample[2]);','float\x20g\x20=\x20sqrt(pow(gx,\x202.0)\x20+\x20pow(gy,\x202.0));','if(\x20g\x20>\x200.0){','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}','else','{','\x09gl_FragColor\x20=\x20vec4(0.0,\x200.0,\x200.0,\x200.0);','}','}']['join']('\x0a')},'Background':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vColor\x20=\x20a_color;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20vColor;','}']['join']('\x0a')},'SkyBox':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec3\x20N\x20=\x20normalize(vVertPos);','\x09vec4\x20color\x20=\x20textureCube(utexCubeMap,\x20N);','\x09gl_FragColor\x20=\x20color;','}']['join']('\x0a')},'PreFilteredEnvironment':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','uniform\x20float\x20fRoughness;','varying\x20vec3\x20vVertPos;','const\x20float\x20PI\x20=\x203.14159265359;','float\x20VanDerCorpus(int\x20n,\x20int\x20base)','{','\x09float\x20invBase\x20=\x201.0\x20/\x20float(base);','\x09float\x20denom\x20=\x201.0;','\x09float\x20result\x20=\x200.0;','\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x2032;\x20++i)','\x09{\x20','\x09\x09if\x20(n\x20>\x200)','\x09\x09{','\x09\x09\x09denom\x20=\x20mod(float(n),\x202.0);','\x09\x09\x09result\x20+=\x20denom\x20*\x20invBase;','\x09\x09\x09invBase\x20=\x20invBase\x20/\x202.0;','\x09\x09\x09n\x20=\x20int(float(n)\x20/\x202.0);','\x09\x09}','\x09}','\x09return\x20result;','}','vec2\x20HammersleyNoBitOps(int\x20i,\x20int\x20N)','{','\x09return\x20vec2(float(i)/float(N),\x20VanDerCorpus(i,\x202));','}','vec3\x20importanceSampleGGX(vec2\x20Xi,\x20vec3\x20N,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness\x20*\x20roughness;','\x09float\x20phi\x20=\x202.0\x20*\x20PI\x20*\x20Xi.x;','\x09float\x20cosTheta\x20=\x20sqrt((1.0\x20-\x20Xi.y)\x20/\x20(1.0\x20+\x20(a\x20*\x20a\x20-\x201.0)\x20*\x20Xi.y));','\x09float\x20sinTheta\x20=\x20sqrt(1.0\x20-\x20cosTheta\x20*\x20cosTheta);','\x09vec3\x20H;','\x09H.x\x20=\x20cos(phi)\x20*\x20sinTheta;','\x09H.y\x20=\x20sin(phi)\x20*\x20sinTheta;','\x09H.z\x20=\x20cosTheta;','\x09vec3\x20up\x20=\x20abs(N.z)\x20<\x200.999\x20?\x20vec3(0.0,\x200.0,\x201.0)\x20:\x20vec3(1.0,\x200.0,\x200.0);','\x09vec3\x20tangent\x20=\x20normalize(cross(up,\x20N));','\x09vec3\x20bitangent\x20=\x20cross(N,\x20tangent);','\x09vec3\x20sampleVec\x20=\x20H.x\x20*\x20tangent\x20+\x20H.y\x20*\x20bitangent\x20+\x20H.z\x20*\x20N;','\x09return\x20normalize(sampleVec);','}','void\x20main()','{','\x09vec3\x20N\x20=\x20normalize(vVertPos);','\x09vec3\x20V\x20=\x20N;','\x09const\x20int\x20sampleCount\x20=\x201024;','\x09float\x20totalWeight\x20=\x200.0;','\x09vec3\x20prefilteredColor\x20=\x20vec3(0.0,\x200.0,\x200.0);','\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20sampleCount;\x20++i)','\x09{','\x09\x09vec2\x20Xi\x20=\x20HammersleyNoBitOps(i,\x20sampleCount);','\x09\x09vec3\x20H\x20=\x20importanceSampleGGX(Xi,\x20N,\x20fRoughness);','\x09\x09vec3\x20L\x20=\x20normalize(2.0\x20*\x20dot(V,\x20H)\x20*\x20H\x20-\x20V);','\x09\x09float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x09\x09if\x20(NdotL\x20>\x200.0);','\x09\x09{','\x09\x09\x09prefilteredColor\x20+=\x20textureCube(utexCubeMap,\x20L).rgb\x20*\x20NdotL;','\x09\x09\x09totalWeight\x20+=\x20NdotL;','\x09\x09}','\x09}','\x09prefilteredColor\x20=\x20prefilteredColor\x20/\x20totalWeight;','\x09gl_FragColor\x20=\x20vec4(prefilteredColor.rgb,\x201.0);','}']['join']('\x0a')},'FramebufferMarge':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_DepthTexture;','uniform\x20sampler2D\x20u_margeTexture;','uniform\x20sampler2D\x20u_margeDepthTexture;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09float\x20depth0\x20=\x20texture2D(u_DepthTexture,\x20vUV.xy).r;','\x09float\x20depth1\x20=\x20texture2D(u_margeDepthTexture,\x20vUV.xy).r;','if(depth0\x20<\x20depth1)\x20{','\x20\x20\x20\x20\x20gl_FragColor\x20=\x20texture2D(u_Texture,\x20vUV.xy);','}\x20else\x20{','\x20\x20\x20\x20\x20gl_FragColor\x20=\x20texture2D(u_margeTexture,\x20vUV.xy);','}','}']['join']('\x0a')},'Marge':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_margeTexture;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x20\x20\x20\x20\x20vec4\x20col1\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x20\x20\x20\x20\x20vec4\x20col2\x20=\x20texture2D(u_margeTexture,\x20vUV.xy);','\x20\x20\x20\x20\x20gl_FragColor\x20=\x20col1\x20*\x20col2;','}']['join']('\x0a')},'Blur':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec2\x20uTexScale;','uniform\x20int\x20uBlurType;','uniform\x20vec2\x20uDirection;','uniform\x20float\x20uSigma;','varying\x20vec2\x20vUV;','vec4\x20ssaoBlur_v2(vec2\x20uv)\x20{','\x20\x20\x20\x20vec4\x20result\x20=\x200.0;','\x20\x20\x20\x20vec2\x20texelSize\x20=\x201.0\x20/\x20uTexScale;','\x20\x20\x20\x20for(int\x20x\x20=\x20-1;\x20x<\x201;\x20++x)\x20','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20y\x20=\x20-1;\x20y\x20<\x201;\x20++y)','\x20\x20\x20\x20\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20offset\x20=\x20vec2(float(x),\x20float(y))\x20*\x20texelSize;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20offset);','\x20\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20result\x20/\x209.0;','}','vec4\x20Gaussian_Blur_v2(vec2\x20uv)\x20{','\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(0.0);','\x20\x20\x20\x20vec2\x20off1\x20=\x20vec2(uSigma\x20*\x201.33)\x20*\x20uDirection;','\x20\x20\x20\x20vec2\x20off2\x20=\x20vec2(uSigma\x20*\x203.23)\x20*\x20uDirection;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv)\x20*\x200.2270270270;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20(off1\x20/\x20uTexScale))\x20*\x200.3162162162;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20-\x20(off1\x20/\x20uTexScale))\x20*\x200.3162162162;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20(off2\x20/\x20uTexScale))\x20*\x200.0702702703;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20-\x20(off2\x20/\x20uTexScale))\x20*\x200.0702702703;','\x20\x20\x20\x20return\x20color;','}','void\x20main()\x20{','\x20\x20\x20vec4\x20col;','\x20\x20\x20if(uBlurType\x20==\x200)','\x20\x20\x20\x20\x20\x20col\x20=\x20Gaussian_Blur_v2(vUV);','\x20\x20\x20else\x20if(uBlurType\x20==\x201)','\x20\x20\x20\x20\x20\x20col\x20=\x20ssaoBlur_v2(vUV);','\x20\x20\x20gl_FragColor\x20=\x20col;','}']['join']('\x0a')},'SSAO':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_NoiseTexture;','uniform\x20vec2\x20uTexScale;','uniform\x20float\x20uSigma;','uniform\x20float\x20uBias;','uniform\x20vec2\x20uAttenuation;','uniform\x20vec2\x20uDepthRange;','uniform\x20float\x20ubPerspectiveView;','uniform\x20mat4\x20u_MVPmatrixInverse;','varying\x20vec2\x20vUV;','#define\x20SIN45\x200.707107','float\x20LinearizeDepth(float\x20depth)','{','\x09float\x20z\x20=\x20depth;','\x09return\x20z\x20*\x20step(0.5,\x20ubPerspectiveView);','}','float\x20LinearizeDepth2(float\x20depth)','{','\x09float\x20z\x20=\x20depth;','\x09return\x20((z\x20*\x20(uDepthRange.y\x20-\x20uDepthRange.x)\x20+\x20uDepthRange.x)\x20/\x20((uDepthRange.y\x20-\x20uDepthRange.x)*2.0))\x20*\x20step(ubPerspectiveView,\x200.5);','}','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x09float\x20x\x20=\x20fragCoord.x\x20*\x202.0\x20-\x201.0;','\x09float\x20y\x20=\x20fragCoord.y\x20*\x202.0\x20-\x201.0;','\x09float\x20z1\x20=\x20LinearizeDepth(texture2D(u_PositionTexture,\x20fragCoord).z);','\x09float\x20z2\x20=\x20LinearizeDepth2(texture2D(u_PositionTexture,\x20fragCoord).z);','\x09vec4\x20posProj\x20=\x20vec4(x,\x20y,\x20z1\x20+\x20z2,\x201.0);','\x09vec4\x20posView\x20=\x20u_MVPmatrixInverse\x20*\x20posProj;','\x09vec3\x20pos\x20=\x20posView.xyz\x20/\x20posView.w;','\x09return\x20pos;','}','float\x20getOcclusion(vec3\x20position,\x20vec3\x20normal,\x20vec2\x20fragCoord)\x20{','\x20\x20\x20\x20vec3\x20occluderPosition\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20positionVec\x20=\x20occluderPosition\x20-\x20position;','\x20\x20\x20\x20float\x20intensity\x20=\x20max(dot(normal,\x20normalize(positionVec))\x20-\x20uBias,\x200.0);','\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(uAttenuation.x\x20+\x20uAttenuation.y\x20*\x20length(positionVec));','\x20\x20\x20\x20return\x20intensity\x20*\x20attenuation;','}','float\x20getOcclusion_v2(vec3\x20position,\x20vec3\x20normal,\x20vec2\x20fragCoord)\x20{','\x20\x20\x20\x20\x20\x20\x20vec3\x20occluderPosition\x20=\x20getPosition(fragCoord);','\x09\x09float\x20rangeCheck\x20=\x20smoothstep(0.0,\x201.0,\x20uSigma\x20/\x20abs(position.z\x20-\x20occluderPosition.z));','\x09\x09vec3\x20P2SP\x20=\x20occluderPosition\x20-\x20position;','\x09\x09float\x20dis2\x20=\x20dot(P2SP,\x20P2SP);','\x09\x09float\x20dis\x20=\x20sqrt(dis2);','\x09\x09float\x20NdotP2SP\x20=\x20dot(normal,\x20P2SP)\x20/\x20dis;','\x09\x09return\x20(NdotP2SP\x20+\x20uBias)\x20*\x20rangeCheck;','}','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec3\x20position\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20normal\x20=\x20texture2D(u_NormalTexture,\x20fragCoord).xyz;','\x20\x20\x20\x20vec2\x20rand\x20=\x20normalize(texture2D(u_NoiseTexture,\x20fragCoord).xy);','\x20\x20\x20\x20rand\x20=\x20rand\x20*\x202.0\x20-\x201.0;','\x20\x20\x20\x20normal\x20=\x20normal\x20*\x202.0\x20-\x201.0;','\x20\x20\x20\x20normal\x20=\x20normalize(normal);','\x09float\x20z1\x20=\x20LinearizeDepth(texture2D(u_PositionTexture,\x20fragCoord).z);','\x09float\x20z2\x20=\x20LinearizeDepth2(texture2D(u_PositionTexture,\x20fragCoord).z);','\x20\x20\x20float\x20depth\x20=\x20z1\x20+\x20z2;','\x20\x20\x20\x20float\x20kernelRadius\x20=\x20uSigma;','\x20\x20\x20\x20vec2\x20kernel[4];','\x20\x20\x20\x20kernel[0]\x20=\x20vec2(0.0,\x201.0);','\x20\x20\x20\x20kernel[1]\x20=\x20vec2(1.0,\x200.0);','\x20\x20\x20\x20kernel[2]\x20=\x20vec2(0.0,\x20-1.0);','\x20\x20\x20\x20kernel[3]\x20=\x20vec2(-1.0,\x200.0);','\x20\x20\x20\x20float\x20occlusion\x20=\x200.0;','\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i<\x204;\x20++i)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20k1\x20=\x20reflect(kernel[i],\x20rand);','\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20k2\x20=\x20vec2(k1.x\x20*\x20SIN45\x20-\x20k1.y\x20*\x20SIN45,\x20k1.x\x20*\x20SIN45\x20+\x20k1.y\x20*\x20SIN45);','\x20\x20\x20\x20\x20\x20\x20\x20k1\x20*=\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20\x20k2\x20*=\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20\x20k1\x20/=\x20uTexScale;','\x20\x20\x20\x20\x20\x20\x20\x20k2\x20/=\x20uTexScale;','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion_v2(position,\x20normal,\x20fragCoord\x20+\x20vec2(k1));','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion_v2(position,\x20normal,\x20fragCoord\x20+\x20vec2(k2\x20*\x200.75));','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion_v2(position,\x20normal,\x20fragCoord\x20+\x20vec2(k1\x20*\x200.5));','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion_v2(position,\x20normal,\x20fragCoord\x20+\x20vec2(k2\x20*\x200.25));','\x20\x20\x20\x20}','\x20\x20\x20occlusion\x20=\x20clamp(occlusion\x20/\x2016.0,\x200.0,\x201.0);','\x20\x20\x20gl_FragColor\x20=\x20vec4(0,\x200,\x200,\x20occlusion);','}']['join']('\x0a')},'Normal':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20\x20\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x20\x20\x20normal\x20=\x20normal\x20*\x200.5\x20+\x200.5;','\x20\x20\x20gl_FragColor\x20=\x20vec4(normal,\x201.0);','}']['join']('\x0a')},'Position':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vGLPos\x20=\x20vec3(position)\x20/\x20position.w;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPos;','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20vec3\x20col\x20=\x20vGLPos;','\x20\x20\x20col\x20=\x20col\x20*\x200.5\x20+\x200.5;','\x20\x20\x20gl_FragColor\x20=\x20vec4(col.rgb,\x201.0);','}']['join']('\x0a')}},this['ShadingLanguage_v2']={'Basic':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_TRIPLANAR','varying\x20vec3\x20vWorldPos;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','uniform\x20mat4\x20u_MVShadowMatrix;','varying\x20vec4\x20vShadowCoord;','varying\x20vec4\x20vShadowVert;','#endif','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20\x20\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','#ifdef\x20SHADING_TRIPLANAR','\x20\x20\x20vWorldPos\x20=\x20updatePosition;','#endif','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20vec4\x20shadowVertPos4\x20=\x20u_MVShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowVert\x20=\x20shadowVertPos4;','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','#ifdef\x20SHADING_TRIPLANAR','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','varying\x20vec3\x20vWorldPos;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20float\x20uBias;','varying\x20vec4\x20vShadowCoord;','varying\x20vec4\x20vShadowVert;','#endif','uniform\x20bool\x20ubUseGraySacle;','float\x20dfd(vec2\x20p)\x20{\x20','\x20\x20\x20return\x20p.x\x20*\x20p.x\x20-\x20p.y;','}','#ifdef\x20SHADING_SHADOW','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x20\x20\x20float\x20currentDepth\x20=\x20vShadowVert.z\x20+\x20uBias;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','\x20\x20\x20vec4\x20projectedPos\x20=\x20texture2D(uShadowPositionTexture,\x20projectedTexcoord.xy);','\x20\x20\x20float\x20projectedDepth\x20=\x20projectedPos.z;','\x20\x20\x20float\x20shadowLight\x20=\x20(inRange\x20&&\x20projectedDepth\x20>=\x20currentDepth)\x20?\x200.8\x20:\x201.0;','\x20\x20\x20return\x20shadowLight;','}','#endif','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20texColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','#ifdef\x20SHADING_TRIPLANAR','\x20\x20\x20vec3\x20world_normal\x20=\x20vWorldPos;','if(world_normal.x\x20>=\x201527208.5\x20&&\x20world_normal.y\x20>=\x202773888.0\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x203825013.25\x20&&\x20world_normal.y\x20<=\x205606348.5\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x201527208.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202297804.75);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x202773888.0);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202832460.5);','}','if(world_normal.x\x20>=\x203823475.5\x20&&\x20world_normal.y\x20>=\x202778586.5\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x206012677.0\x20&&\x20world_normal.y\x20<=\x205612678.5\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x203823475.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202189201.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x202778586.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202834092.0);','}','if(world_normal.x\x20>=\x203833331.5\x20&&\x20world_normal.y\x20>=\x2058852.18\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x206020032.0\x20&&\x20world_normal.y\x20<=\x202780283.25\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x203833331.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202186700.5);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x2058852.18);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202721431.0);','}','if(world_normal.x\x20>=\x201534491.75\x20&&\x20world_normal.y\x20>=\x2051843.3\x20&&','\x20\x20\x20\x20world_normal.x\x20<=\x203834849.75\x20&&\x20world_normal.y\x20<=\x202780290.75\x20)\x20{','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20-\x201534491.75);','\x20\x20\x20\x20\x20\x20\x20world_normal.x\x20=\x20(world_normal.x\x20/\x202300357.25);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20(world_normal.y\x20-\x2051843.3);','\x20\x20\x20\x20\x20\x20\x20world_normal.y\x20=\x20-(world_normal.y\x20/\x202728447.5);','}','\x20\x20\x20world_normal.z\x20=\x200.0;','\x09vec3\x20blending\x20=\x20world_normal;','\x20\x20\x20vec3\x20uvs\x20=\x20blending;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20uvs.xy);','\x09\x20\x20\x20\x20texColor\x20=\x20texColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20texture2D(u_texNormal,\x20uvs.xy).rgb;','\x09\x20\x20\x20\x20texNormal\x20=\x20normalize((texNormal*2.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20lightDir\x20=\x20TBN*lightDir;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','#endif','#ifdef\x20SHADING_HDR','\x20\x20\x20texColor\x20=\x20pow(texColor,\x20vec3(2.2));\x20','#endif','\x09float\x20lambertian\x20=\x20max(dot(lightDir,\x20normal),\x200.0);','\x09float\x20specular\x20=\x200.0;','\x09if\x20(lambertian\x20>\x200.0)','\x09{','\x09\x09vec3\x20viewDir\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09\x09vec3\x20halfDir\x20=\x20normalize(lightDir\x20+\x20viewDir);','\x09\x09float\x20specAngle\x20=\x20max(dot(halfDir,\x20normal),\x200.0);','\x09\x09specular\x20=\x20pow(specAngle,\x20shininess\x20*\x20128.0);','\x09}','\x09vec3\x20colorLinear\x20=\x20vAmbientColor\x20+','\x09\x09clamp((lambertian*1.0)\x20*\x20vDirectionalLightColor,\x200.0,\x201.0);','\x09vec3\x20colorGammaCorrected\x20=\x20colorLinear\x20*\x20texColor.rgb;','\x09colorGammaCorrected\x20=\x20clamp(colorGammaCorrected,\x200.0,\x201.0);','\x09colorGammaCorrected\x20=\x20colorGammaCorrected\x20+','\x09\x09vSpecColor\x20*\x20specular\x20*\x200.5;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20colorGammaCorrected\x20=\x20colorGammaCorrected\x20*\x20fShadow;','#endif','#ifdef\x20SHADING_HDR','\x20\x20\x20colorGammaCorrected\x20=\x20colorGammaCorrected\x20/\x20(colorGammaCorrected\x20+\x20vec3(1.0));','\x20\x20\x20colorGammaCorrected\x20=\x20pow(colorGammaCorrected,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(colorGammaCorrected.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20gl_FragColor\x20=\x20vec4(colorGammaCorrected,\x20baseAlpha);','}']['join']('\x0a')},'BasicUtil':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','void\x20main()\x20{','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20fShininess);','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20lightDir\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20texColor\x20=\x20vec3(1.0,\x201.0,\x201.0);','\x09texColor\x20=\x20u_color.rgb;','#ifdef\x20SHADING_HDR','\x20\x20\x20texColor\x20=\x20pow(texColor,\x20vec3(2.2));\x20','#endif','\x09float\x20lambertian\x20=\x20max(dot(lightDir,\x20normal),\x200.0);','\x09float\x20specular\x20=\x200.0;','\x09if\x20(lambertian\x20>\x200.0)','\x09{','\x09\x09vec3\x20viewDir\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09\x09vec3\x20halfDir\x20=\x20normalize(lightDir\x20+\x20viewDir);','\x09\x09float\x20specAngle\x20=\x20max(dot(halfDir,\x20normal),\x200.0);','\x09\x09specular\x20=\x20pow(specAngle,\x20shininess\x20*\x20128.0);','\x09}','\x09vec3\x20colorLinear\x20=\x20vAmbientColor\x20+','\x09\x09clamp((lambertian*1.0)\x20*\x20vDirectionalLightColor,\x200.0,\x201.0);','\x09vec3\x20colorGammaCorrected\x20=\x20colorLinear\x20*\x20texColor.rgb;','\x09colorGammaCorrected\x20=\x20clamp(colorGammaCorrected,\x200.0,\x201.0);','\x09colorGammaCorrected\x20=\x20colorGammaCorrected\x20+','\x09\x09vSpecColor\x20*\x20specular\x20*\x200.5;','#ifdef\x20SHADING_HDR','\x20\x20\x20colorGammaCorrected\x20=\x20colorGammaCorrected\x20/\x20(colorGammaCorrected\x20+\x20vec3(1.0));','\x20\x20\x20colorGammaCorrected\x20=\x20pow(colorGammaCorrected,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(colorGammaCorrected.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20colorGammaCorrected\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x20\x20\x20gl_FragColor\x20=\x20vec4(colorGammaCorrected,\x20u_color.a);','}']['join']('\x0a')},'PBR':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec3\x20a_normal;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','varying\x20vec4\x20vShadowCoord;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20utexCubeMapLod0;','uniform\x20samplerCube\x20utexCubeMapLod1;','uniform\x20float\x20fRoughnessLod;','\x0a#endif','#ifdef\x20SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20float\x20uBias;','varying\x20vec4\x20vShadowCoord;','#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20fRoughness;','uniform\x20float\x20fMetallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useBump;','uniform\x20sampler2D\x20u_texBump;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureSpecluar;','uniform\x20sampler2D\x20u_texSpecluar;','varying\x20vec2\x20vUV;','varying\x20vec3\x20vNormalInterp;','varying\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','\x0a#ifdef\x20SHADING_ENVIRONMENT','vec3\x20ComputeEnvColor(float\x20roughness_lod,\x20vec3\x20refl)','{','\x09float\x20a\x20=\x20roughness_lod\x20*\x20roughness_lod;','\x09vec3\x20lod0\x20=\x20textureCube(utexCubeMapLod0,\x20refl).rgb;','\x09vec3\x20lod1\x20=\x20textureCube(utexCubeMapLod1,\x20refl).rgb;','\x09return\x20mix(lod1,\x20lod0,\x20a);','}','\x0a#endif','#ifdef\x20SHADING_SHADOW','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','\x20\x20\x20vec4\x20prevViewPos\x20=\x20texture2D(uShadowPositionTexture,\x20projectedTexcoord.xy);','\x20\x20\x20float\x20prevViewPosDepth\x20=\x20prevViewPos.z;','\x20\x20\x20float\x20shadowLight\x20=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x200.8\x20:\x201.0;','\x20\x20\x20return\x20shadowLight;','}','#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20fRoughness;','\x09float\x20metal\x20=\x20fMetallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture2D(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture2D(u_texMetalness,\x20vUV.xy).r;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.1,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.1,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.1,\x200.98,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x09vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture2D(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','#endif','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20texNormal\x20=\x20normalize((texture2D(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x09\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(','\x09\x20\x20\x20\x20\x091.0,\x200.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x201.0,\x200.0,','\x09\x20\x20\x20\x20\x090.0,\x200.0,\x201.0','\x09\x20\x20\x20\x20);','\x09\x20\x20\x20\x20vec3\x20tangent\x20=\x20normalize(texNormal\x20-\x20normal\x20*\x20dot(texNormal,\x20normal));','\x09\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x09\x20\x20\x20\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);','\x09\x20\x20\x20\x20L\x20=\x20TBN*L;','\x09\x20\x20\x20\x20normal\x20=\x20texNormal;','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normal;','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(0.000,\x20dot(N,\x20V));','\x09float\x20AO\x20=\x201.0;','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x09vec3\x20diffuse\x20=\x20mix(baseColor.rgb,\x20vec3(0.0),\x20metallic);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09vec3\x20envSpecular\x20=\x20vec3(0.0);','\x0a#ifdef\x20SHADING_ENVIRONMENT','\x09vec3\x20R\x20=\x20reflect(V\x20*\x20-1.0,\x20N);','\x09vec3\x20envColor\x20=\x20ComputeEnvColor(fRoughnessLod,\x20R);','\x09envSpecular\x20=\x20envColor\x20*\x20kSA;','\x20\x20\x20ambient\x20=\x20envColor;','\x0a#endif','\x20\x20\x20vec3\x20colSpec\x20=\x20vSpecColor;','\x20\x20\x20if(useTextureSpecluar\x20==\x201)\x20{','\x09\x20\x20\x20\x20vec3\x20colSpecular\x20=\x20texture2D(u_texSpecluar,\x20vUV.xy).rgb;','\x20\x20\x20\x20\x20\x20\x20colSpec\x20=\x20colSpec\x20*\x20colSpecular;','\x20\x20\x20}','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x09vec3\x20LoSpec\x20=\x20vec3(0.0);','\x09{','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20baseColor.rgb\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x20\x20\x20\x20\x20\x20\x20LoSpec\x20=\x20diffColor\x20*\x20surfaceReduction\x20*\x20fresnelLerp(NdV,\x20F0,\x20vec3(grazingTerm));','\x09}','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20envSpecular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo\x20+\x20LoSpec;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','#ifdef\x20SHADING_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x09gl_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','}']['join']('\x0a')},'PBR_v2':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec2\x20vUV;','out\x20vec3\x20vNormalInterp;','out\x20vec3\x20vVertPos;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec3\x20a_matrixIdx;','#endif','#ifdef\x20SHADING_SHADOW','uniform\x20mat4\x20u_MVPShadowMatrix;','out\x20vec4\x20vShadowCoord;','#endif','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','\x20\x20\x20vUV.y\x20=\x201.0\x20-\x20vUV.y;','\x20\x20\x20#ifdef\x20SHADING_SHADOW','\x20\x20\x20vec4\x20shadowPosition\x20=\x20u_MVPShadowMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vShadowCoord\x20=\x20shadowPosition;','\x20\x20\x20#endif','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','#ifdef\x20SHADING_SHADOW','uniform\x20sampler2D\x20uShadowPositionTexture;','uniform\x20float\x20uBias;','in\x20vec4\x20vShadowCoord;','#endif','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20fRoughness;','uniform\x20float\x20fMetallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useBump;','uniform\x20sampler2D\x20u_texBump;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureAO;','uniform\x20sampler2D\x20u_texAO;','uniform\x20int\x20useTextureSpecluar;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20u_texIrradianceMap;','uniform\x20samplerCube\x20u_texPrefilterMap;','uniform\x20sampler2D\x20\x20u_texbrdfLUT;','\x0a#endif','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20int\x20uLightNum;','uniform\x20vec3\x20vLightPos[4];','uniform\x20vec3\x20vLightColor[4];','in\x20vec2\x20vUV;','in\x20vec3\x20vNormalInterp;','in\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','out\x20vec4\x20o_FragColor;','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20r\x20=\x20(roughness\x20+\x201.0);','\x20\x20\x20\x20float\x20k\x20=\x20(r*r)\x20/\x208.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','float\x20DistributionGGX(vec3\x20N,\x20vec3\x20H,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20a2\x20=\x20a*a;','\x20\x20\x20\x20float\x20NdotH\x20=\x20max(dot(N,\x20H),\x200.0);','\x20\x20\x20\x20float\x20NdotH2\x20=\x20NdotH*NdotH;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20a2;','\x20\x20\x20\x20float\x20denom\x20=\x20(NdotH2\x20*\x20(a2\x20-\x201.0)\x20+\x201.0);','\x20\x20\x20\x20denom\x20=\x20SH_PI\x20*\x20denom\x20*\x20denom;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','#ifdef\x20SHADING_SHADOW','float\x20ShadowVSM()\x20{','\x20\x20\x20vec3\x20projectedTexcoord\x20=\x20vShadowCoord.xyz\x20/\x20vShadowCoord.w;','\x20\x20\x20float\x20currentDepth\x20=\x20projectedTexcoord.z;','\x09projectedTexcoord\x20=\x20projectedTexcoord\x20*\x200.5\x20+\x200.5;','\x20\x20\x20bool\x20inRange\x20=','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.x\x20<=\x201.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20>=\x200.0\x20&&','\x20\x20\x20\x20\x20\x20\x20projectedTexcoord.y\x20<=\x201.0;','\x20\x20\x20vec4\x20prevViewPos\x20=\x20texture(uShadowPositionTexture,\x20projectedTexcoord.xy);','\x20\x20\x20float\x20prevViewPosDepth\x20=\x20prevViewPos.z;','\x20\x20\x20float\x20shadowLight\x20=\x20(inRange\x20&&\x20prevViewPosDepth\x20<=\x20currentDepth\x20+\x20uBias)\x20?\x200.8\x20:\x201.0;','\x20\x20\x20return\x20shadowLight;','}','#endif','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20fRoughness;','\x09float\x20metal\x20=\x20fMetallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture(u_texMetalness,\x20vUV.xy).g;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.0,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.0,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.0,\x201.0,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x0a#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','\x0a#endif','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(TBN\x20*\x20tangentNormal);','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normalize(normal);','\x20\x20\x20vec3\x20R\x20=\x20reflect(-V,\x20N);\x20','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(dot(N,\x20V),\x200.0);','\x09vec3\x20diffuse\x20=\x20baseColor.rgb;','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x20\x20\x20for(int\x20i\x20=\x200\x20;\x20i\x20<\x20uLightNum\x20;\x20++i)','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(distance\x20*\x20distance);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20radiance\x20=\x20vLightColor[i]\x20*\x20attenuation\x20*\x20100.0\x20*\x20100.0;','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NDF\x20=\x20DistributionGGX(N,\x20H,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20\x20\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20F\x20\x20\x20\x20=\x20fresnelSchlick(HdV,\x20F0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20numerator\x20\x20\x20\x20=\x20NDF\x20*\x20G\x20*\x20F;','\x20\x20\x20\x20\x20\x20\x20float\x20denominator\x20=\x204.0\x20*\x20NdV\x20*\x20NdL\x20+\x200.0001;','\x20\x20\x20\x20\x20\x20\x20vec3\x20specular\x20=\x20numerator\x20/\x20denominator;','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20kS\x20=\x20F;','\x20\x20\x20\x20\x20\x20\x20vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20(kD\x20*\x20diffuse\x20/\x20SH_PI\x20+\x20specular)\x20*\x20radiance\x20*\x20NdL;','\x09}','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20diffuse\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20+=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x09}','\x09float\x20AO\x20=\x201.0;','\x20\x20\x20if(useTextureAO\x20==\x201){','\x09\x20\x20\x20\x20AO\x20=\x20texture(u_texAO,\x20vUV.xy).r;','\x20\x20\x20}','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x20\x20\x20vec3\x20specular\x20=\x20vec3(0.0);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09kDA\x20*=\x201.0\x20-\x20metallic;','#ifdef\x20SHADING_ENVIRONMENT','\x20\x20\x20vec3\x20irradiance\x20=\x20texture(u_texIrradianceMap,\x20N).rgb;','\x20\x20\x20diffuse\x20=\x20irradiance\x20*\x20diffuse;','\x20\x20\x20const\x20float\x20MAX_REFLECTION_LOD\x20=\x204.0;','\x20\x20\x20vec3\x20prefilteredColor\x20=\x20textureLod(u_texPrefilterMap,\x20R,\x20\x20roughness\x20*\x20MAX_REFLECTION_LOD).rgb;','\x20\x20\x20vec2\x20brdf\x20=\x20texture(u_texbrdfLUT,\x20vec2(NdV,\x20roughness)).xy;','\x20\x20\x20specular\x20=\x20prefilteredColor\x20*\x20(kSA\x20*\x20brdf.x\x20+\x20brdf.y);','#endif','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20specular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','#ifdef\x20SHADING_SHADOW','\x20\x20\x20float\x20fShadow\x20=\x20ShadowVSM();','\x20\x20\x20fragColor\x20=\x20fragColor\x20*\x20fShadow;','#endif','#ifdef\x20SHADING_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x09o_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','\x20\x20\x20if(o_FragColor.a\x20<\x200.1)','\x20\x20\x20\x20discard;','}']['join']('\x0a')},'AnimationPBR':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20vec2\x20uTiling;','uniform\x20vec2\x20uOffset;','out\x20vec2\x20vUV;','out\x20vec3\x20vNormalInterp;','out\x20vec3\x20vVertPos;','out\x20vec3\x20vGLPosition;','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec4\x20a_bipedIdx;','in\x20vec4\x20a_bipedWeight;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20vec3(0,\x200,\x200);','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20bipedIdx[4];\x20bipedIdx[0]\x20=\x20int(a_bipedIdx.x);\x20bipedIdx[1]\x20=\x20int(a_bipedIdx.y);\x20bipedIdx[2]\x20=\x20int(a_bipedIdx.z);\x20bipedIdx[3]\x20=\x20int(a_bipedIdx.w);','\x20\x20\x20\x20\x20\x20\x20float\x20bipedWeight[4];\x20bipedWeight[0]\x20=\x20a_bipedWeight.x;\x20bipedWeight[1]\x20=\x20a_bipedWeight.y;\x20bipedWeight[2]\x20=\x20a_bipedWeight.z;\x20bipedWeight[3]\x20=\x20a_bipedWeight.w;','\x20\x20\x20\x20\x20\x20\x20for(int\x20w\x20=\x200;\x20w\x20<\x204;\x20w++)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(bipedWeight[w]\x20==\x200.0)\x20continue;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20bipedIdx[w]\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(a_position,\x201.0);','\x09\x20\x20\x20\x20\x20\x20\x20\x20updatePosition\x20+=\x20vec3(vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w)\x20*\x20bipedWeight[w];','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20updatePosition\x20=\x20a_position;','\x20\x20\x20}','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20vGLPosition\x20=\x20vec3(position)\x20/\x20position.w;','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x09vUV\x20=\x20(a_uv\x20*\x20uTiling)\x20+\x20(uOffset\x20*\x20uTiling);','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20float\x20ubPerspectiveView;','uniform\x20vec4\x20u_color;','uniform\x20vec3\x20vEyePos;','uniform\x20vec3\x20vAmbientColor;','uniform\x20vec3\x20vSpecColor;','uniform\x20float\x20fShininess;','uniform\x20float\x20fRoughness;','uniform\x20float\x20fMetallic;','uniform\x20int\x20useTexture;','uniform\x20sampler2D\x20u_Texture;','uniform\x20int\x20useTextureNormal;','uniform\x20sampler2D\x20u_texNormal;','uniform\x20mat4\x20u_NormalPmatrix;','uniform\x20int\x20useBump;','uniform\x20sampler2D\x20u_texBump;','uniform\x20int\x20useTextureRoughness;','uniform\x20sampler2D\x20u_texRoughness;','uniform\x20int\x20useTextureMetalness;','uniform\x20sampler2D\x20u_texMetalness;','uniform\x20int\x20useTextureSpecluar;','\x0a#ifdef\x20SHADING_ENVIRONMENT','uniform\x20samplerCube\x20u_texIrradianceMap;','uniform\x20samplerCube\x20u_texPrefilterMap;','uniform\x20sampler2D\x20\x20u_texbrdfLUT;','\x0a#endif','uniform\x20vec3\x20vDirectionalLightPos;','uniform\x20vec3\x20vDirectionalLightColor;','uniform\x20int\x20uLightNum;','uniform\x20vec3\x20vLightPos[4];','uniform\x20vec3\x20vLightColor[4];','in\x20vec2\x20vUV;','in\x20vec3\x20vNormalInterp;','in\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseGraySacle;','const\x20float\x20SH_PI\x20=\x203.14159265359;','const\x20float\x20SH_INV_PI\x20=\x200.31830988618;','out\x20vec4\x20o_FragColor;','vec3\x20lerp(vec3\x20a,\x20vec3\x20b,\x20float\x20w)','{','\x20\x20return\x20a\x20+\x20vec3(w*(b-a));','}','vec3\x20fresnelSchlickRoughness(float\x20cosTheta,\x20vec3\x20F0,\x20float\x20roughness)','{','\x09return\x20F0\x20+\x20(max(vec3(1.0\x20-\x20roughness),\x20F0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelSchlick(float\x20cosTheta,\x20vec3\x20F0)','{','\x09\x20return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20pow(1.0\x20-\x20cosTheta,\x205.0);','}','vec3\x20fresnelLerp\x20(float\x20cosA,\x20vec3\x20F0,\x20vec3\x20F90)','{','\x20\x20\x20\x20float\x20t\x20=\x20\x20pow(1.0\x20-\x20cosA,\x205.0);','\x20\x20\x20\x20return\x20lerp\x20(F0,\x20F90,\x20t);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20r\x20=\x20(roughness\x20+\x201.0);','\x20\x20\x20\x20float\x20k\x20=\x20(r*r)\x20/\x208.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','float\x20DistributionGGX(vec3\x20N,\x20vec3\x20H,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20a2\x20=\x20a*a;','\x20\x20\x20\x20float\x20NdotH\x20=\x20max(dot(N,\x20H),\x200.0);','\x20\x20\x20\x20float\x20NdotH2\x20=\x20NdotH*NdotH;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20a2;','\x20\x20\x20\x20float\x20denom\x20=\x20(NdotH2\x20*\x20(a2\x20-\x201.0)\x20+\x201.0);','\x20\x20\x20\x20denom\x20=\x20SH_PI\x20*\x20denom\x20*\x20denom;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20DisneyDiffuse(float\x20NdV,\x20float\x20NdL,\x20float\x20LdH,\x20float\x20roughness)','{','\x09float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdH\x20*\x20LdH\x20*\x20roughness;','\x09float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdL,\x205.0));','\x09float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow(1.0\x20-\x20NdV,\x205.0));','\x09return\x20lightScatter\x20*\x20viewScatter;','}','float\x20GGXTerm(float\x20NdH,\x20float\x20roughness)','{','\x09float\x20a2\x20=\x20roughness\x20*\x20roughness\x20*\x20roughness\x20*\x20roughness;','\x09float\x20d\x20=\x20(NdH\x20*\x20a2\x20-\x20NdH)\x20*\x20NdH\x20+\x201.0;','\x09return\x20SH_INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x200.00000001);','}','float\x20SmithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness*roughness;','\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);','\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x200.0001);','}','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09float\x20shini\x20=\x20fShininess;\x20','\x09float\x20rough\x20=\x20fRoughness;','\x09float\x20metal\x20=\x20fMetallic;','\x20\x20\x20if(useTextureRoughness\x20==\x201)\x20{','\x09\x20\x20\x20rough\x20=\x20texture(u_texRoughness,\x20vUV.xy).r;','\x20\x20\x20}','\x20\x20\x20if(useTextureMetalness\x20==\x201)\x20{','\x09\x20\x20\x20\x20metal\x20=\x20texture(u_texMetalness,\x20vUV.xy).g;','\x20\x20\x20}','\x09float\x20shininess\x20=\x20mix(0.0,\x201.0,\x20shini);','\x09float\x20roughness\x20=\x20mix(0.0,\x201.0,\x20rough);','\x09float\x20metallic\x20=\x20mix(0.0,\x201.0,\x20metal);','\x09float\x20smoothness\x20=\x201.0\x20-\x20roughness;','\x09vec3\x20normal\x20=\x20normalize(vNormalInterp);','\x09vec3\x20baseColor\x20=\x20u_color.rgb;','\x09float\x20baseAlpha\x20=\x20u_color.a;','\x20\x20\x20if(useTexture\x20==\x201){','\x09\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20texture(u_Texture,\x20vUV.xy);','\x09\x20\x20\x20\x20baseColor\x20=\x20baseColor\x20*\x20diffuseColor.rgb;','\x09\x20\x20\x20\x20baseAlpha\x20=\x20baseAlpha\x20*\x20diffuseColor.a;','\x20\x20\x20}','\x0a#ifdef\x20SHADING_HDR','\x09baseColor\x20=\x20pow(baseColor,\x20vec3(2.2));','\x0a#endif','\x20\x20\x20if(useTextureNormal\x20==\x201){','\x09\x20\x20\x20\x20vec3\x20tangentNormal\x20=\x20normalize((texture(u_texNormal,\x20vUV.xy).rgb\x20*\x202.0)\x20-\x201.0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q1\x20\x20=\x20dFdx(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20Q2\x20\x20=\x20dFdy(vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdx(vUV);','\x20\x20\x20\x20\x20\x20\x20vec2\x20st2\x20=\x20dFdy(vUV);','\x20\x20\x20\x20\x20\x20\x20vec3\x20N\x20\x20\x20=\x20normal;','\x20\x20\x20\x20\x20\x20\x20vec3\x20T\x20\x20=\x20normalize(Q1*st2.t\x20-\x20Q2*st1.t);','\x20\x20\x20\x20\x20\x20\x20vec3\x20B\x20\x20=\x20-normalize(cross(N,\x20T));','\x20\x20\x20\x20\x20\x20\x20mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);','\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(TBN\x20*\x20tangentNormal);','\x20\x20\x20}','\x20\x20\x20vec3\x20V\x20=\x20normalize(vEyePos\x20-\x20vVertPos);','\x09vec3\x20N\x20=\x20normalize(normal);','\x20\x20\x20vec3\x20R\x20=\x20reflect(-V,\x20N);\x20','\x09vec3\x20F0\x20=\x20vec3(shininess);','\x09F0\x20=\x20F0\x20*\x200.08;','\x09F0\x20=\x20F0\x20*\x20(1.0\x20-\x20metallic)\x20+\x20baseColor.rgb\x20*\x20metallic;','\x09float\x20NdV\x20=\x20max(dot(N,\x20V),\x200.0);','\x09vec3\x20diffuse\x20=\x20baseColor.rgb;','\x09vec3\x20Lo\x20=\x20vec3(0.0);','\x20\x20\x20for(int\x20i\x20=\x200\x20;\x20i\x20<\x20uLightNum\x20;\x20++i)','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(vLightPos[i]\x20-\x20vVertPos);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(distance\x20*\x20distance);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20radiance\x20=\x20vLightColor[i]\x20*\x20attenuation\x20*\x20100.0\x20*\x20100.0;','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NDF\x20=\x20DistributionGGX(N,\x20H,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20\x20\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20F\x20\x20\x20\x20=\x20fresnelSchlick(HdV,\x20F0);','\x20\x20\x20\x20\x20\x20\x20vec3\x20numerator\x20\x20\x20\x20=\x20NDF\x20*\x20G\x20*\x20F;','\x20\x20\x20\x20\x20\x20\x20float\x20denominator\x20=\x204.0\x20*\x20NdV\x20*\x20NdL\x20+\x200.0001;','\x20\x20\x20\x20\x20\x20\x20vec3\x20specular\x20=\x20numerator\x20/\x20denominator;','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20kS\x20=\x20F;','\x20\x20\x20\x20\x20\x20\x20vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20(kD\x20*\x20diffuse\x20/\x20SH_PI\x20+\x20specular)\x20*\x20radiance\x20*\x20NdL;','\x09}','\x09{','\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(vDirectionalLightPos\x20-\x20vVertPos);','\x09\x09vec3\x20H\x20=\x20normalize(V\x20+\x20L);','\x09\x09float\x20NdL\x20=\x20max(0.000,\x20dot(N,\x20L));','\x09\x09float\x20NdH\x20=\x20max(0.000,\x20dot(N,\x20H));','\x09\x09float\x20LdH\x20=\x20max(0.000,\x20dot(L,\x20H));','\x09\x09float\x20HdV\x20=\x20max(0.000,\x20dot(H,\x20V));','\x09\x09float\x20specColorAlpha\x20=\x201.0;','\x09\x09float\x20oneMinusReflectivity\x20=\x20specColorAlpha\x20-\x20specColorAlpha\x20*\x20metallic;','\x09\x09vec3\x20diffColor\x20=\x20diffuse\x20*\x20oneMinusReflectivity;','\x09\x09float\x20diffuseTerm\x20=\x20DisneyDiffuse(NdV,\x20NdL,\x20LdH,\x20roughness)\x20*\x20NdL;','\x09\x09vec3\x20F\x20=\x20fresnelSchlick(HdV,\x20F0);','\x09\x09vec3\x20kS\x20=\x20F;','\x09\x09vec3\x20kD\x20=\x20vec3(1.0)\x20-\x20kS;','\x09\x09kD\x20*=\x201.0\x20-\x20metallic;','\x09\x09float\x20V\x20=\x20SmithJointGGXVisibilityTerm(NdL,\x20NdV,\x20roughness);','\x09\x09float\x20D\x20=\x20GGXTerm(NdH,\x20roughness);','\x09\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20SH_PI;','\x09\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20NdL);','\x09\x09float\x20surfaceReduction\x20=\x201.0\x20/\x20(roughness*roughness*roughness*roughness\x20+\x201.0);','\x09\x09if(F0.x\x20+\x20F0.y\x20+\x20F0.z\x20<=\x200.0)','\x09\x09\x09specularTerm\x20*=\x200.0;','\x09\x09float\x20grazingTerm\x20=\x20smoothness\x20*\x20smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity);','\x09\x09grazingTerm\x20=\x20max(min(grazingTerm,\x201.0),\x200.0);','\x09\x09Lo\x20+=\x20kD\x20*\x20diffColor\x20*\x20vDirectionalLightColor\x20*\x20NdL;','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20vDirectionalLightColor\x20*\x20specularTerm\x20*\x20fresnelSchlick(LdH,\x20F0);','\x20\x20\x20\x20\x20\x20\x20Lo\x20+=\x20diffColor\x20*\x20surfaceReduction\x20*\x20fresnelLerp(NdV,\x20F0,\x20vec3(grazingTerm));','\x09}','\x09float\x20AO\x20=\x201.0;','\x09vec3\x20ambient\x20=\x20vAmbientColor;','\x20\x20\x20vec3\x20specular\x20=\x20vec3(0.0);','\x09vec3\x20kSA\x20=\x20fresnelSchlickRoughness(NdV,\x20F0,\x20roughness);','\x09vec3\x20kDA\x20=\x20vec3(1.0)\x20-\x20kSA;','\x09kDA\x20*=\x201.0\x20-\x20metallic;','#ifdef\x20SHADING_ENVIRONMENT','\x20\x20\x20vec3\x20irradiance\x20=\x20texture(u_texIrradianceMap,\x20N).rgb;','\x20\x20\x20diffuse\x20=\x20irradiance\x20*\x20diffuse;','\x20\x20\x20const\x20float\x20MAX_REFLECTION_LOD\x20=\x204.0;','\x20\x20\x20vec3\x20prefilteredColor\x20=\x20textureLod(u_texPrefilterMap,\x20R,\x20\x20roughness\x20*\x20MAX_REFLECTION_LOD).rgb;','\x20\x20\x20vec2\x20brdf\x20=\x20texture(u_texbrdfLUT,\x20vec2(NdV,\x20roughness)).xy;','\x20\x20\x20specular\x20=\x20prefilteredColor\x20*\x20(kSA\x20*\x20brdf.x\x20+\x20brdf.y);','#endif','\x09ambient\x20=\x20(kDA\x20*\x20ambient\x20*\x20diffuse\x20+\x20specular)\x20*\x20AO;','\x09vec3\x20fragColor\x20=\x20ambient','\x09+\x20Lo;','#ifdef\x20SHADING_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x20\x20\x20if(ubUseGraySacle)\x20{','\x20\x20\x20\x20\x20\x20\x20float\x20graySacle\x20=\x20(fragColor.r\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.g\x20+','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fragColor.b)\x20/\x203.0;','\x20\x20\x20\x20\x20\x20\x20fragColor\x20=\x20vec3(graySacle,\x20graySacle,\x20graySacle);','\x20\x20\x20}','\x09o_FragColor\x20=\x20vec4(fragColor,\x20baseAlpha);','}']['join']('\x0a')},'Picking':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20float\x20u_PointSize;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec4\x20vColor;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x20\x20\x20vColor\x20=\x20vec4(float(a_color.x)\x20/\x20255.0,\x20float(a_color.y)\x20/\x20255.0,\x20float(a_color.z)\x20/\x20255.0,\x20float(a_color.w)\x20/\x20255.0);','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec4\x20vColor;','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20gl_FragColor\x20=\x20vColor;','}']['join']('\x0a')},'Texture2D':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec4\x20u_color;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x09vec4\x20tex\x20=\x20texture(u_Texture,\x20vUV.xy);','\x20\x20\x20o_FragColor\x20=\x20u_color\x20*\x20tex;','}']['join']('\x0a')},'Basic2D':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20float\x20u_PointSize;','uniform\x20mat4\x20u_MVPmatrix;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20gl_PointSize\x20=\x20u_PointSize;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec4\x20u_color;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'AnimationBasic2D':{'vertex':['in\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','out\x20vec3\x20vVertPos;','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','in\x20vec4\x20a_bipedIdx;','in\x20vec4\x20a_bipedWeight;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20vec3(0,\x200,\x200);','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20bipedIdx[4];\x20bipedIdx[0]\x20=\x20int(a_bipedIdx.x);\x20bipedIdx[1]\x20=\x20int(a_bipedIdx.y);\x20bipedIdx[2]\x20=\x20int(a_bipedIdx.z);\x20bipedIdx[3]\x20=\x20int(a_bipedIdx.w);','\x20\x20\x20\x20\x20\x20\x20float\x20bipedWeight[4];\x20bipedWeight[0]\x20=\x20a_bipedWeight.x;\x20bipedWeight[1]\x20=\x20a_bipedWeight.y;\x20bipedWeight[2]\x20=\x20a_bipedWeight.z;\x20bipedWeight[3]\x20=\x20a_bipedWeight.w;','\x20\x20\x20\x20\x20\x20\x20for(int\x20w\x20=\x200;\x20w\x20<\x204;\x20w++)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(bipedWeight[w]\x20==\x200.0)\x20continue;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20bipedIdx[w]\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(a_position,\x201.0);','\x09\x20\x20\x20\x20\x20\x20\x20\x20updatePosition\x20+=\x20vec3(vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w)\x20*\x20bipedWeight[w];','\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20}','\x20\x20\x20else\x20{','\x20\x20\x20\x20\x20\x20\x20updatePosition\x20=\x20a_position;','\x20\x20\x20}','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','uniform\x20vec4\x20u_color;','in\x20vec3\x20vVertPos;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x09o_FragColor\x20=\x20u_color;','}']['join']('\x0a')},'FXAA':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20vec2\x20uTexScale;','uniform\x20sampler2D\x20u_Texture;','varying\x20vec2\x20vUV;','const\x20float\x20FXAA_SPAN_MAX\x20=\x208.0;','const\x20float\x20FXAA_REDUCE_MUL\x20=\x201.0\x20/\x208.0;','const\x20float\x20FXAA_REDUCE_MIN\x20=\x201.0\x20/\x20128.0;','void\x20main()\x20{','\x09vec3\x20rgbNW\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(-1.0,-1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbNE\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(1.0,-1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbSW\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(-1.0,1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbSE\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20(vec2(1.0,1.0)\x20/\x20uTexScale)).rgb;','\x09vec3\x20rgbM\x20=\x20texture2D(u_Texture,\x20vUV).rgb;','\x09vec3\x20luma\x20=\x20vec3(0.299,\x200.587,\x200.114);','\x09float\x20lumaNW\x20=\x20dot(rgbNW,\x20luma);','\x09float\x20lumaNE\x20=\x20dot(rgbNE,\x20luma);','\x09float\x20lumaSW\x20=\x20dot(rgbSW,\x20luma);','\x09float\x20lumaSE\x20=\x20dot(rgbSE,\x20luma);','\x09float\x20lumaM\x20=\x20dot(rgbM,\x20\x20luma);','\x09float\x20lumaMin\x20=\x20min(lumaM,\x20min(min(lumaNW,\x20lumaNE),\x20min(lumaSW,\x20lumaSE)));','\x09float\x20lumaMax\x20=\x20max(lumaM,\x20max(max(lumaNW,\x20lumaNE),\x20max(lumaSW,\x20lumaSE)));','\x09vec2\x20dir;','\x09dir.x\x20=\x20-((lumaNW\x20+\x20lumaNE)\x20-\x20(lumaSW\x20+\x20lumaSE));','\x09dir.y\x20=\x20((lumaNW\x20+\x20lumaSW)\x20-\x20(lumaNE\x20+\x20lumaSE));','\x09float\x20dirReduce\x20=\x20max(','\x09\x09(lumaNW\x20+\x20lumaNE\x20+\x20lumaSW\x20+\x20lumaSE)\x20*\x20(0.25\x20*\x20FXAA_REDUCE_MUL),','\x09\x09FXAA_REDUCE_MIN);','\x09float\x20rcpDirMin\x20=\x201.0\x20/\x20(min(abs(dir.x),\x20abs(dir.y))\x20+\x20dirReduce);','\x09dir\x20=\x20min(vec2(FXAA_SPAN_MAX,\x20\x20FXAA_SPAN_MAX),','\x09\x09max(vec2(-FXAA_SPAN_MAX,\x20-FXAA_SPAN_MAX),','\x09\x09\x09dir\x20*\x20rcpDirMin))\x20/\x20uTexScale;','\x09vec3\x20rgbA\x20=\x20(1.0\x20/\x202.0)\x20*\x20(','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(1.0\x20/\x203.0\x20-\x200.5)).rgb\x20+','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(2.0\x20/\x203.0\x20-\x200.5)).rgb);','\x09vec3\x20rgbB\x20=\x20rgbA\x20*\x20(1.0\x20/\x202.0)\x20+\x20(1.0\x20/\x204.0)\x20*\x20(','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(0.0\x20/\x203.0\x20-\x200.5)).rgb\x20+','\x09\x09texture2D(u_Texture,\x20vUV.xy\x20+\x20dir\x20*\x20(3.0\x20/\x203.0\x20-\x200.5)).rgb);','\x09float\x20lumaB\x20=\x20dot(rgbB,\x20luma);','\x09float\x20alpha\x20=\x20texture2D(u_Texture,\x20vUV).a;','\x09if\x20((lumaB\x20<\x20lumaMin)\x20||\x20(lumaB\x20>\x20lumaMax))\x20{','\x09\x09gl_FragColor\x20=\x20vec4(rgbA.rgb,\x20alpha);','\x09}','\x09else\x20{','\x09\x09gl_FragColor\x20=\x20vec4(rgbB.rgb,\x20alpha);','\x09}','}']['join']('\x0a')},'Depth':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vGLPosition\x20=\x20vec3(position)\x20/\x20position.w;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4.xyz)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec3\x20vGLPosition;','uniform\x20float\x20ubPerspectiveView;','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20const\x20float\x20DEPTH_MAX\x20=\x2016777215.0;','\x20\x20\x20float\x20d1\x20=\x20(vGLPosition.z\x20*\x200.5\x20+\x200.5)\x20*\x20step(ubPerspectiveView,\x200.5);','\x20\x20\x20float\x20d2\x20=\x20vGLPosition.z\x20*\x20step(0.5,\x20ubPerspectiveView);','\x20\x20\x20float\x20d\x20=\x20floor((d1+d2)\x20*\x20DEPTH_MAX);','\x20\x20\x20float\x20depth1\x20=\x20shMod(d,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth2\x20=\x20shMod(d\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth3\x20=\x20shMod((d\x20/\x20256.0)\x20/\x20256.0,\x20256.0)\x20/\x20255.0;','\x20\x20\x20float\x20depth4\x20=\x20d1\x20+\x20d2;','\x20\x20\x20gl_FragColor\x20=\x20vec4(depth1,\x20depth2,\x20depth3,\x20depth4);','}']['join']('\x0a')},'Edge':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec2\x20uTexScale;','uniform\x20vec4\x20u_color;','varying\x20vec2\x20vUV;','void\x20main()\x20{','vec2\x20invSize\x20=\x20vec2(\x201.0\x20/\x20uTexScale.x,\x201.0\x20/\x20uTexScale.y);','float\x20dxtex\x20=\x20invSize.x;','float\x20dytex\x20=\x20invSize.y;','\x09mat3\x20matEdgeX\x20=\x20mat3(','\x09\x090.0,\x20-1.0,\x200.0,','\x09\x090.0,\x201.0,\x200.0,','\x09\x090.0,\x200.0,\x200.0','\x09);','\x09mat3\x20matEdgeY\x20=\x20mat3(','\x09\x090.0,\x200.0,\x200.0,','\x09\x09-1.0,\x201.0,\x200.0,','\x09\x090.0,\x200.0,\x200.0','\x09);','mat3\x20matSample\x20=\x20mat3(','\x090.0,\x200.0,\x200.0,','\x090.0,\x200.0,\x200.0,','\x090.0,\x200.0,\x200.0',');','for\x20(int\x20i\x20=\x20-1;\x20i<2;\x20i++)','{','\x09for\x20(int\x20j\x20=\x20-1;\x20j<2;\x20j++)','\x09{','\x09\x09vec3\x20sample\x20=\x20texture2D(u_Texture,\x20vUV\x20+\x20vec2(float(i)\x20*\x20dxtex,\x20float(j)\x20*\x20dytex)).rgb;','\x09\x09matSample[i\x20+\x201][j\x20+\x201]\x20=\x20length(sample);','\x09}','}','float\x20gx\x20=\x20dot(matEdgeX[0],\x20matSample[0])\x20+\x20dot(matEdgeX[1],\x20matSample[1])\x20+\x20dot(matEdgeX[2],\x20matSample[2]);','float\x20gy\x20=\x20dot(matEdgeY[0],\x20matSample[0])\x20+\x20dot(matEdgeY[1],\x20matSample[1])\x20+\x20dot(matEdgeY[2],\x20matSample[2]);','float\x20g\x20=\x20sqrt(pow(gx,\x202.0)\x20+\x20pow(gy,\x202.0));','if(\x20g\x20>\x200.0){','\x20\x20\x20gl_FragColor\x20=\x20u_color;','}','else','{','\x09gl_FragColor\x20=\x20vec4(0.0,\x200.0,\x200.0,\x200.0);','}','}']['join']('\x0a')},'Background':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec4\x20a_color;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vColor\x20=\x20a_color;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','varying\x20vec4\x20vColor;','void\x20main()\x20{','\x20\x20\x20gl_FragColor\x20=\x20vColor;','}']['join']('\x0a')},'SkyBox':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20color\x20=\x20textureCube(utexCubeMap,\x20vVertPos);','\x20\x20\x20vec3\x20fragColor\x20=\x20color.rgb;\x20','#ifdef\x20SHADING_HDR','\x20\x20\x20fragColor\x20=\x20fragColor\x20/\x20(fragColor\x20+\x20vec3(1.0));','\x20\x20\x20fragColor\x20=\x20pow(fragColor,\x20vec3(1.0\x20/\x202.2));\x20','#endif','\x09gl_FragColor\x20=\x20vec4(fragColor.rgb,\x201.0);','}']['join']('\x0a')},'EquirectangularSkyBox':{'vertex':['in\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture8;','in\x20vec3\x20vVertPos;','out\x20vec4\x20o_FragColor;','const\x20vec2\x20invAtan\x20=\x20vec2(0.1591,\x200.3183);','vec2\x20SampleSphericalMap(vec3\x20v)','{','\x20\x20\x20\x20vec2\x20uv\x20=\x20vec2(atan(v.z,\x20v.x),\x20asin(v.y));','\x20\x20\x20\x20uv\x20*=\x20invAtan;','\x20\x20\x20\x20uv\x20+=\x200.5;','\x20\x20\x20\x20return\x20uv;','}','void\x20main()\x20{','\x20\x20\x20vec2\x20uv\x20=\x20SampleSphericalMap(normalize(vVertPos));','\x20\x20\x20vec3\x20fragColor\x20=\x20texture(u_Texture8,\x20uv).rgb;','\x09o_FragColor\x20=\x20vec4(fragColor.rgb,\x201.0);','}']['join']('\x0a')},'PreFilteredEnvironment':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','uniform\x20float\x20fRoughness;','varying\x20vec3\x20vVertPos;','const\x20float\x20PI\x20=\x203.14159265359;','float\x20VanDerCorpus(int\x20n,\x20int\x20base)','{','\x09float\x20invBase\x20=\x201.0\x20/\x20float(base);','\x09float\x20denom\x20=\x201.0;','\x09float\x20result\x20=\x200.0;','\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x2032;\x20++i)','\x09{\x20','\x09\x09if\x20(n\x20>\x200)','\x09\x09{','\x09\x09\x09denom\x20=\x20mod(float(n),\x202.0);','\x09\x09\x09result\x20+=\x20denom\x20*\x20invBase;','\x09\x09\x09invBase\x20=\x20invBase\x20/\x202.0;','\x09\x09\x09n\x20=\x20int(float(n)\x20/\x202.0);','\x09\x09}','\x09}','\x09return\x20result;','}','vec2\x20HammersleyNoBitOps(int\x20i,\x20int\x20N)','{','\x09return\x20vec2(float(i)/float(N),\x20VanDerCorpus(i,\x202));','}','vec3\x20importanceSampleGGX(vec2\x20Xi,\x20vec3\x20N,\x20float\x20roughness)','{','\x09float\x20a\x20=\x20roughness\x20*\x20roughness;','\x09float\x20phi\x20=\x202.0\x20*\x20PI\x20*\x20Xi.x;','\x09float\x20cosTheta\x20=\x20sqrt((1.0\x20-\x20Xi.y)\x20/\x20(1.0\x20+\x20(a\x20*\x20a\x20-\x201.0)\x20*\x20Xi.y));','\x09float\x20sinTheta\x20=\x20sqrt(1.0\x20-\x20cosTheta\x20*\x20cosTheta);','\x09vec3\x20H;','\x09H.x\x20=\x20cos(phi)\x20*\x20sinTheta;','\x09H.y\x20=\x20sin(phi)\x20*\x20sinTheta;','\x09H.z\x20=\x20cosTheta;','\x09vec3\x20up\x20=\x20abs(N.z)\x20<\x200.999\x20?\x20vec3(0.0,\x200.0,\x201.0)\x20:\x20vec3(1.0,\x200.0,\x200.0);','\x09vec3\x20tangent\x20=\x20normalize(cross(up,\x20N));','\x09vec3\x20bitangent\x20=\x20cross(N,\x20tangent);','\x09vec3\x20sampleVec\x20=\x20H.x\x20*\x20tangent\x20+\x20H.y\x20*\x20bitangent\x20+\x20H.z\x20*\x20N;','\x09return\x20normalize(sampleVec);','}','void\x20main()','{','\x09vec3\x20N\x20=\x20normalize(vVertPos);','\x09vec3\x20V\x20=\x20N;','\x09const\x20int\x20sampleCount\x20=\x201024;','\x09float\x20totalWeight\x20=\x200.0;','\x09vec3\x20prefilteredColor\x20=\x20vec3(0.0,\x200.0,\x200.0);','\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20sampleCount;\x20++i)','\x09{','\x09\x09vec2\x20Xi\x20=\x20HammersleyNoBitOps(i,\x20sampleCount);','\x09\x09vec3\x20H\x20=\x20importanceSampleGGX(Xi,\x20N,\x20fRoughness);','\x09\x09vec3\x20L\x20=\x20normalize(2.0\x20*\x20dot(V,\x20H)\x20*\x20H\x20-\x20V);','\x09\x09float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x09\x09if\x20(NdotL\x20>\x200.0);','\x09\x09{','\x09\x09\x09prefilteredColor\x20+=\x20textureCube(utexCubeMap,\x20L).rgb\x20*\x20NdotL;','\x09\x09\x09totalWeight\x20+=\x20NdotL;','\x09\x09}','\x09}','\x09prefilteredColor\x20=\x20prefilteredColor\x20/\x20totalWeight;','\x09gl_FragColor\x20=\x20vec4(prefilteredColor.rgb,\x201.0);','}']['join']('\x0a')},'IrradianceEnvironment':{'vertex':['in\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec3\x20vVertPos;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vVertPos\x20=\x20a_position;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20samplerCube\x20utexCubeMap;','uniform\x20float\x20fRoughness;','in\x20vec3\x20vVertPos;','const\x20float\x20PI\x20=\x203.14159265359;','layout(location\x20=\x200)\x20out\x20vec4\x20o_FragColor;','void\x20main()','{','\x20\x20\x20\x20vec3\x20N\x20=\x20normalize(vVertPos);','\x20\x20\x20\x20vec3\x20irradiance\x20=\x20vec3(0.0);\x20\x20\x20','\x20\x20\x20\x20vec3\x20up\x20\x20\x20\x20=\x20vec3(0.0,\x201.0,\x200.0);','\x20\x20\x20\x20vec3\x20right\x20=\x20normalize(cross(up,\x20N));','\x20\x20\x20\x20up\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x20normalize(cross(N,\x20right));','\x20\x20\x20\x20','\x20\x20\x20\x20float\x20sampleDelta\x20=\x200.025;','\x20\x20\x20\x20float\x20nrSamples\x20=\x200.0f;','\x20\x20\x20\x20for(float\x20phi\x20=\x200.0;\x20phi\x20<\x202.0\x20*\x20PI;\x20phi\x20+=\x20sampleDelta)','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20for(float\x20theta\x20=\x200.0;\x20theta\x20<\x200.5\x20*\x20PI;\x20theta\x20+=\x20sampleDelta)','\x20\x20\x20\x20\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20tangentSample\x20=\x20vec3(sin(theta)\x20*\x20cos(phi),\x20\x20sin(theta)\x20*\x20sin(phi),\x20cos(theta));','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20sampleVec\x20=\x20tangentSample.x\x20*\x20right\x20+\x20tangentSample.y\x20*\x20up\x20+\x20tangentSample.z\x20*\x20N;\x20','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20irradiance\x20+=\x20texture(utexCubeMap,\x20sampleVec).rgb\x20*\x20cos(theta)\x20*\x20sin(theta);','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20nrSamples++;','\x20\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20\x20}','\x20\x20\x20\x20irradiance\x20=\x20PI\x20*\x20irradiance\x20*\x20(1.0\x20/\x20float(nrSamples));','\x20\x20\x20\x20o_FragColor\x20=\x20vec4(irradiance,\x201.0);','}']['join']('\x0a')},'BRDF':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','const\x20float\x20PI\x20=\x203.14159265359;','in\x20vec2\x20vUV;','layout(location\x20=\x200)\x20out\x20vec4\x20o_FragColor;','float\x20RadicalInverse_VdC(uint\x20bits)\x20','{','\x20\x20\x20\x20bits\x20=\x20(bits\x20<<\x2016u)\x20|\x20(bits\x20>>\x2016u);','\x20\x20\x20\x20bits\x20=\x20((bits\x20&\x200x55555555u)\x20<<\x201u)\x20|\x20((bits\x20&\x200xAAAAAAAAu)\x20>>\x201u);','\x20\x20\x20\x20bits\x20=\x20((bits\x20&\x200x33333333u)\x20<<\x202u)\x20|\x20((bits\x20&\x200xCCCCCCCCu)\x20>>\x202u);','\x20\x20\x20\x20bits\x20=\x20((bits\x20&\x200x0F0F0F0Fu)\x20<<\x204u)\x20|\x20((bits\x20&\x200xF0F0F0F0u)\x20>>\x204u);','\x20\x20\x20\x20bits\x20=\x20((bits\x20&\x200x00FF00FFu)\x20<<\x208u)\x20|\x20((bits\x20&\x200xFF00FF00u)\x20>>\x208u);','\x20\x20\x20\x20return\x20float(bits)\x20*\x202.3283064365386963e-10;','}','vec2\x20Hammersley(uint\x20i,\x20uint\x20N)','{','\x20\x20\x20\x20return\x20vec2(float(i)/float(N),\x20RadicalInverse_VdC(i));','}','vec3\x20ImportanceSampleGGX(vec2\x20Xi,\x20vec3\x20N,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20a\x20=\x20roughness*roughness;','\x20\x20\x20\x20float\x20phi\x20=\x202.0\x20*\x20PI\x20*\x20Xi.x;','\x20\x20\x20\x20float\x20cosTheta\x20=\x20sqrt((1.0\x20-\x20Xi.y)\x20/\x20(1.0\x20+\x20(a*a\x20-\x201.0)\x20*\x20Xi.y));','\x20\x20\x20\x20float\x20sinTheta\x20=\x20sqrt(1.0\x20-\x20cosTheta*cosTheta);','\x20\x20\x20\x20vec3\x20H;','\x20\x20\x20\x20H.x\x20=\x20cos(phi)\x20*\x20sinTheta;','\x20\x20\x20\x20H.y\x20=\x20sin(phi)\x20*\x20sinTheta;','\x20\x20\x20\x20H.z\x20=\x20cosTheta;','\x20\x20\x20\x20vec3\x20up\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x20abs(N.z)\x20<\x200.999\x20?\x20vec3(0.0,\x200.0,\x201.0)\x20:\x20vec3(1.0,\x200.0,\x200.0);','\x20\x20\x20\x20vec3\x20tangent\x20\x20\x20=\x20normalize(cross(up,\x20N));','\x20\x20\x20\x20vec3\x20bitangent\x20=\x20cross(N,\x20tangent);','\x20\x20\x20\x20vec3\x20sampleVec\x20=\x20tangent\x20*\x20H.x\x20+\x20bitangent\x20*\x20H.y\x20+\x20N\x20*\x20H.z;','\x20\x20\x20\x20return\x20normalize(sampleVec);','}','float\x20GeometrySchlickGGX(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20//\x20note\x20that\x20we\x20use\x20a\x20different\x20k\x20for\x20IBL','\x20\x20\x20\x20float\x20a\x20=\x20roughness;','\x20\x20\x20\x20float\x20k\x20=\x20(a\x20*\x20a)\x20/\x202.0;','\x20\x20\x20\x20float\x20nom\x20\x20\x20=\x20NdotV;','\x20\x20\x20\x20float\x20denom\x20=\x20NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k;','\x20\x20\x20\x20return\x20nom\x20/\x20denom;','}','float\x20GeometrySmith(vec3\x20N,\x20vec3\x20V,\x20vec3\x20L,\x20float\x20roughness)','{','\x20\x20\x20\x20float\x20NdotV\x20=\x20max(dot(N,\x20V),\x200.0);','\x20\x20\x20\x20float\x20NdotL\x20=\x20max(dot(N,\x20L),\x200.0);','\x20\x20\x20\x20float\x20ggx2\x20=\x20GeometrySchlickGGX(NdotV,\x20roughness);','\x20\x20\x20\x20float\x20ggx1\x20=\x20GeometrySchlickGGX(NdotL,\x20roughness);','\x20\x20\x20\x20return\x20ggx1\x20*\x20ggx2;','}','vec2\x20IntegrateBRDF(float\x20NdotV,\x20float\x20roughness)','{','\x20\x20\x20\x20vec3\x20V;','\x20\x20\x20\x20V.x\x20=\x20sqrt(1.0\x20-\x20NdotV*NdotV);','\x20\x20\x20\x20V.y\x20=\x200.0;','\x20\x20\x20\x20V.z\x20=\x20NdotV;','\x20\x20\x20\x20float\x20A\x20=\x200.0;','\x20\x20\x20\x20float\x20B\x20=\x200.0;\x20','\x20\x20\x20\x20vec3\x20N\x20=\x20vec3(0.0,\x200.0,\x201.0);','\x20\x20\x20\x20const\x20uint\x20SAMPLE_COUNT\x20=\x201024u;','\x20\x20\x20\x20for(uint\x20i\x20=\x200u;\x20i\x20<\x20SAMPLE_COUNT;\x20++i)','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20Xi\x20=\x20Hammersley(i,\x20SAMPLE_COUNT);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20H\x20=\x20ImportanceSampleGGX(Xi,\x20N,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20L\x20=\x20normalize(2.0\x20*\x20dot(V,\x20H)\x20*\x20H\x20-\x20V);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NdotL\x20=\x20max(L.z,\x200.0);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20NdotH\x20=\x20max(H.z,\x200.0);','\x20\x20\x20\x20\x20\x20\x20\x20float\x20VdotH\x20=\x20max(dot(V,\x20H),\x200.0);','\x20\x20\x20\x20\x20\x20\x20\x20if(NdotL\x20>\x200.0)','\x20\x20\x20\x20\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20G\x20=\x20GeometrySmith(N,\x20V,\x20L,\x20roughness);','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20G_Vis\x20=\x20(G\x20*\x20VdotH)\x20/\x20(NdotH\x20*\x20NdotV);','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20Fc\x20=\x20pow(1.0\x20-\x20VdotH,\x205.0);','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20A\x20+=\x20(1.0\x20-\x20Fc)\x20*\x20G_Vis;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20B\x20+=\x20Fc\x20*\x20G_Vis;','\x20\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20\x20}','\x20\x20\x20\x20A\x20/=\x20float(SAMPLE_COUNT);','\x20\x20\x20\x20B\x20/=\x20float(SAMPLE_COUNT);','\x20\x20\x20\x20return\x20vec2(A,\x20B);','}','void\x20main()','{','\x20\x20\x20vec2\x20integratedBRDF\x20=\x20IntegrateBRDF(vUV.x,\x20vUV.y);','\x09o_FragColor\x20=\x20vec4(integratedBRDF,\x200.0,\x201.0);','}']['join']('\x0a')},'Blur':{'vertex':['attribute\x20vec3\x20a_position;','attribute\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','varying\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20vec2\x20uTexScale;','uniform\x20int\x20uBlurType;','uniform\x20vec2\x20uDirection;','uniform\x20float\x20uSigma;','uniform\x20vec4\x20u_color;','varying\x20vec2\x20vUV;','vec4\x20ssaoBlur_v2(vec2\x20uv)\x20{','\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(0.0);','\x20\x20\x20\x20vec2\x20texelSize\x20=\x20vec2(1.0)\x20/\x20uTexScale;','\x20\x20\x20\x20for(int\x20x\x20=\x20-2;\x20x<=\x202;\x20++x)\x20','\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20y\x20=\x20-2;\x20y\x20<=\x202;\x20++y)','\x20\x20\x20\x20\x20\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20offset\x20=\x20vec2(float(x),\x20float(y))\x20*\x20texelSize;','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20offset);','\x20\x20\x20\x20\x20\x20\x20\x20}','\x20\x20\x20\x20}','\x20\x20\x20\x20return\x20color\x20/\x2016.0;','}','vec4\x20Gaussian_Blur_v2(vec2\x20uv)\x20{','\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(0.0);','\x20\x20\x20\x20vec2\x20off1\x20=\x20vec2(uSigma\x20*\x201.33)\x20*\x20uDirection;','\x20\x20\x20\x20vec2\x20off2\x20=\x20vec2(uSigma\x20*\x203.23)\x20*\x20uDirection;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv)\x20*\x200.2270270270;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20(off1\x20/\x20uTexScale))\x20*\x200.3162162162;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20-\x20(off1\x20/\x20uTexScale))\x20*\x200.3162162162;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20+\x20(off2\x20/\x20uTexScale))\x20*\x200.0702702703;','\x20\x20\x20\x20color\x20+=\x20texture2D(u_Texture,\x20uv\x20-\x20(off2\x20/\x20uTexScale))\x20*\x200.0702702703;','\x20\x20\x20\x20return\x20color;','}','void\x20main()\x20{','\x20\x20\x20vec4\x20col\x20=\x20vec4(0.0);','\x20\x20\x20if(uBlurType\x20==\x200)','\x20\x20\x20\x20\x20\x20col\x20=\x20Gaussian_Blur_v2(vUV);','\x20\x20\x20else\x20if(uBlurType\x20==\x201)','\x20\x20\x20\x20\x20\x20col\x20=\x20ssaoBlur_v2(vUV);','\x20\x20\x20gl_FragColor\x20=\x20u_color\x20*\x20col;','}']['join']('\x0a')},'SSAO':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_NoiseTexture;','uniform\x20vec2\x20uTexScale;','uniform\x20vec2\x20uNoiseTexScale;','uniform\x20float\x20uSigma;','uniform\x20float\x20uBias;','uniform\x20vec2\x20uAttenuation;','uniform\x20float\x20ubPerspectiveView;','uniform\x20float\x20uNear;','uniform\x20float\x20uFar;','#define\x20SIN45\x200.707107','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20fragCoord);','\x20\x20\x20vec3\x20pos\x20=\x20vec3(pos4.xyz)\x20/\x20pos4.w;','\x09return\x20pos;','}','float\x20getOcclusion(vec3\x20position,\x20vec3\x20normal,\x20vec2\x20fragCoord)\x20{','\x20\x20\x20\x20vec3\x20occluderPosition\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20positionVec\x20=\x20occluderPosition\x20-\x20position;','\x20\x20\x20\x20vec3\x20occluderNormal\x20=\x20texture(u_NormalTexture,\x20fragCoord).xyz;','\x20\x20\x20\x20float\x20intensityN\x20=\x20max(((1.0\x20-\x20abs(dot(normal,\x20normalize(occluderNormal))))\x20-\x20uBias),\x200.0);','\x20\x20\x20\x20vec3\x20P2SP\x20=\x20occluderPosition\x20-\x20position;','\x20\x20\x20\x20float\x20dis2\x20=\x20dot(P2SP,\x20P2SP);','\x20\x20\x20\x20float\x20dis\x20=\x20sqrt(dis2);','\x20\x20\x20\x20if(dis\x20>\x20uSigma)\x20return\x200.0;','\x20\x20\x20\x20float\x20rangeCheck\x20=\x20clamp(uSigma\x20/\x20dis,\x200.0,\x201.0);','\x20\x20\x20\x20float\x20NdotP2SP\x20=\x20dot(normal,\x20normalize(P2SP))\x20/\x20dis;','\x20\x20\x20\x20return\x20(NdotP2SP\x20+\x20uBias)\x20*\x20rangeCheck\x20*\x20intensityN;','}','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec3\x20position\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20normal\x20=\x20texture(u_NormalTexture,\x20fragCoord).xyz;','\x20\x20\x20normal\x20=\x20normalize(normal);','\x20\x20\x20\x20vec2\x20rand\x20=\x20texture(u_NoiseTexture,\x20fragCoord\x20+\x20uNoiseTexScale).xy;','\x20\x20\x20\x20rand\x20=\x20normalize(rand\x20*\x202.0\x20-\x201.0);','\x20\x20\x20\x20float\x20kernelRadius\x20=\x20uSigma;','\x20\x20\x20\x20vec2\x20kernel[4];','\x20\x20\x20\x20kernel[0]\x20=\x20vec2(0.0,\x201.0);','\x20\x20\x20\x20kernel[1]\x20=\x20vec2(1.0,\x200.0);','\x20\x20\x20\x20kernel[2]\x20=\x20vec2(0.0,\x20-1.0);','\x20\x20\x20\x20kernel[3]\x20=\x20vec2(-1.0,\x200.0);','\x20\x20\x20\x20float\x20occlusion\x20=\x200.0;','\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x204;\x20++i)\x20{','\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20k1\x20=\x20reflect(kernel[i],\x20rand);','\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20k2\x20=\x20vec2(k1.x\x20*\x20SIN45\x20-\x20k1.y\x20*\x20SIN45,\x20k1.x\x20*\x20SIN45\x20+\x20k1.y\x20*\x20SIN45);','\x20\x20\x20\x20\x20\x20\x20\x20k1\x20*=\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20\x20k2\x20*=\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20\x20k1\x20/=\x20uTexScale;','\x20\x20\x20\x20\x20\x20\x20\x20k2\x20/=\x20uTexScale;','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion(position,\x20normal,\x20fragCoord\x20+\x20vec2(k1));','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion(position,\x20normal,\x20fragCoord\x20+\x20vec2(k2\x20*\x200.75));','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion(position,\x20normal,\x20fragCoord\x20+\x20vec2(k1\x20*\x200.5));','\x20\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20getOcclusion(position,\x20normal,\x20fragCoord\x20+\x20vec2(k2\x20*\x200.25));','\x20\x20\x20\x20}','\x20\x20\x20occlusion\x20=\x20clamp((occlusion\x20/\x2016.0),\x200.0,\x201.0);','if(occlusion\x20>\x200.0)','\x20\x20\x20{\x20o_FragColor\x20=\x20vec4(1.0,\x201.0,\x201.0,\x201.0\x20-\x20occlusion);\x20}','else','\x20\x20\x20{\x20o_FragColor\x20=\x20vec4(0.0,\x200.0,\x200.0,\x200.0);\x20}','}']['join']('\x0a')},'SSAO_v2':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_NoiseTexture;','uniform\x20mat4\x20u_ProjectionMatrix;','uniform\x20vec2\x20uTexScale;','uniform\x20vec2\x20uNoiseTexScale;','uniform\x20vec3\x20uSamples[32];','uniform\x20float\x20uSigma;','uniform\x20float\x20uBias;','uniform\x20vec2\x20uAttenuation;','#define\x20SIN45\x200.707107','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20fragCoord);','\x20\x20\x20vec3\x20pos\x20=\x20vec3(pos4.xyz)\x20/\x20pos4.w;','\x09return\x20pos;','}','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec3\x20position\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20normal\x20=\x20texture(u_NormalTexture,\x20fragCoord).xyz;','\x09if(normal.z\x20<\x200.0)','\x09\x09normal\x20*=\x20-1.0;','\x20\x20\x20\x20vec3\x20rand\x20=\x20texture(u_NoiseTexture,\x20fragCoord\x20*\x20uNoiseTexScale).xyz;','\x20\x20\x20\x20rand\x20=\x20vec3(vec2(rand.xy)\x20*\x202.0\x20-\x201.0,\x20rand.z);','\x20\x20\x20vec3\x20tangent\x20=\x20normalize(rand\x20-\x20normal\x20*\x20dot(rand,\x20normal));','\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x20\x20\x20mat3\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);\x20','\x20\x20\x20\x20float\x20kernelRadius\x20=\x20uSigma;','\x20\x20\x20float\x20occlusion\x20=\x200.0;','\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x2032;\x20++i)','\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20vec3\x20samplePos\x20=\x20TBN\x20*\x20uSamples[i];','\x20\x20\x20\x20\x20\x20\x20samplePos\x20=\x20position\x20+\x20samplePos\x20*\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20vec4\x20offset\x20=\x20vec4(samplePos,\x201.0);','\x20\x20\x20\x20\x20\x20\x20offset\x20\x20\x20\x20\x20\x20=\x20u_ProjectionMatrix\x20*\x20offset;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20/=\x20offset.w;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20=\x20offset.xyz\x20*\x200.5\x20+\x200.5;','\x20\x20\x20\x20\x20\x20\x20vec3\x20sampleDepth\x20=\x20getPosition(offset.xy);\x20','\x20\x20\x20\x20\x20\x20\x20vec3\x20positionVec\x20=\x20position\x20-\x20sampleDepth;','\x20\x20\x20\x20\x20\x20\x20float\x20rangeCheck\x20=\x20smoothstep(0.0,\x201.0,\x20kernelRadius\x20/\x20length(positionVec));','\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20(sampleDepth.z\x20>=\x20samplePos.z\x20+\x20uBias\x20?\x201.0\x20:\x200.0)\x20*\x20rangeCheck;','\x20\x20\x20\x20}','\x20\x20\x20occlusion\x20=\x20clamp((occlusion\x20/\x2032.0),\x200.0,\x201.0);','\x20\x20\x20occlusion\x20=\x20pow(occlusion,\x202.0);','\x20\x20\x20o_FragColor\x20=\x20vec4(vec3(occlusion),\x201.0);','}']['join']('\x0a')},'SSAO_v3':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_PositionTexture;','uniform\x20sampler2D\x20u_NormalTexture;','uniform\x20sampler2D\x20u_NoiseTexture;','uniform\x20mat4\x20u_ProjectionMatrix;','uniform\x20vec2\x20uNoiseTexScale;','uniform\x20vec3\x20uSamples[128];','uniform\x20float\x20uSigma;','uniform\x20float\x20uBias;','#define\x20kernelSize\x20128','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','vec3\x20getPosition(vec2\x20fragCoord)\x20{','\x20\x20\x20vec4\x20pos4\x20=\x20texture(u_PositionTexture,\x20fragCoord);','\x20\x20\x20vec3\x20pos\x20=\x20vec3(pos4.xyz)\x20/\x20pos4.w;','\x09return\x20pos;','}','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec3\x20position\x20=\x20getPosition(fragCoord);','\x20\x20\x20\x20vec3\x20normal\x20=\x20normalize(texture(u_NormalTexture,\x20fragCoord).xyz);','\x20\x20\x20\x20vec3\x20rand\x20=\x20texture(u_NoiseTexture,\x20fragCoord\x20*\x20uNoiseTexScale).xyz;','\x20\x20\x20\x20rand\x20=\x20normalize(rand);','\x20\x20\x20vec3\x20tangent\x20=\x20normalize(rand\x20-\x20normal\x20*\x20dot(rand,\x20normal));','\x20\x20\x20vec3\x20bitangent\x20=\x20cross(normal,\x20tangent);','\x20\x20\x20mat3\x20TBN\x20=\x20mat3(tangent,\x20bitangent,\x20normal);\x20','\x20\x20\x20\x20float\x20kernelRadius\x20=\x20uSigma;','\x20\x20\x20float\x20occlusion\x20=\x200.0;','\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x20kernelSize;\x20++i)','\x20\x20\x20{','\x20\x20\x20\x20\x20\x20\x20vec3\x20samplePos\x20=\x20TBN\x20*\x20uSamples[i];','\x20\x20\x20\x20\x20\x20\x20samplePos\x20=\x20position\x20+\x20samplePos\x20*\x20kernelRadius;','\x20\x20\x20\x20\x20\x20\x20vec4\x20offset\x20=\x20vec4(samplePos,\x201.0);','\x20\x20\x20\x20\x20\x20\x20offset\x20\x20\x20\x20\x20\x20=\x20u_ProjectionMatrix\x20*\x20offset;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20/=\x20offset.w;','\x20\x20\x20\x20\x20\x20\x20offset.xyz\x20=\x20offset.xyz\x20*\x200.5\x20+\x200.5;','\x20\x20\x20\x20\x20\x20\x20vec3\x20sampleDepth\x20=\x20getPosition(offset.xy);','\x20\x20\x20\x20\x20\x20\x20float\x20rangeCheck\x20=\x20smoothstep(0.0,\x201.0,\x20kernelRadius\x20/\x20abs(position.z\x20-\x20sampleDepth.z));','\x20\x20\x20\x20\x20\x20\x20occlusion\x20+=\x20(sampleDepth.z\x20>=\x20samplePos.z\x20+\x20uBias\x20?\x201.0\x20:\x200.0)\x20*\x20rangeCheck;','\x20\x20\x20\x20}','\x20\x20\x20occlusion\x20=\x20\x201.0\x20-\x20(occlusion\x20/\x20float(kernelSize));','\x20\x20\x20o_FragColor\x20=\x20vec4(vec3(occlusion),\x201.0);','}']['join']('\x0a')},'Texture2D_SSAO':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_subTexture;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec4\x20fragColor\x20=\x20texture(u_Texture,\x20fragCoord);','\x20\x20\x20\x20vec4\x20sub\x20=\x20texture(u_subTexture,\x20fragCoord);','\x20\x20\x20vec3\x20color\x20=\x20fragColor.rgb*(0.6\x20+\x20sub.r*0.4);','\x20\x20\x20\x20o_FragColor\x20=\x20vec4(color,\x20fragColor.a);','}']['join']('\x0a')},'Texture2D_Sub':{'vertex':['in\x20vec3\x20a_position;','in\x20vec2\x20a_uv;','uniform\x20mat4\x20u_MVPmatrix;','out\x20vec2\x20vUV;','void\x20main()\x20{','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(a_position,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vUV\x20=\x20a_uv;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','uniform\x20sampler2D\x20u_Texture;','uniform\x20sampler2D\x20u_subTexture;','in\x20vec2\x20vUV;','out\x20vec4\x20o_FragColor;','void\x20main()\x20{','\x20\x20\x20\x20vec2\x20fragCoord\x20=\x20vUV;','\x20\x20\x20\x20vec4\x20fragColor\x20=\x20texture(u_Texture,\x20fragCoord);','\x20\x20\x20\x20vec4\x20sub\x20=\x20texture(u_subTexture,\x20fragCoord);','\x20\x20\x20\x20o_FragColor\x20=\x20vec4(clamp(vec3(fragColor.rgb\x20-\x20sub.rgb),\x200.0,\x201.0),\x20fragColor.a);','}']['join']('\x0a')},'Depth':{'vertex':['attribute\x20vec3\x20a_position;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','varying\x20vec3\x20vVertPos;','varying\x20vec4\x20vGLPosition;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vGLPosition\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(a_position,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4.xyz)\x20/\x20vertPos4.w;','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','varying\x20vec3\x20vVertPos;','varying\x20vec4\x20vGLPosition;','uniform\x20float\x20ubPerspectiveView;','float\x20shMod(float\x20a,\x20float\x20b){','\x20\x20\x20float\x20c\x20=\x20floor(a/b);','\x20\x20\x20return\x20floor(a\x20-\x20b\x20*\x20c);','}','void\x20main()\x20{','#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','#endif','\x20\x20\x20float\x20currentDepth\x20=\x20vGLPosition.z\x20/\x20vGLPosition.w;','\x20\x20\x20gl_FragColor\x20=\x20vec4(currentDepth,\x20currentDepth,\x20currentDepth,\x201.0);','}']['join']('\x0a')},'Preprocessing':{'vertex':['in\x20vec3\x20a_position;','in\x20vec3\x20a_normal;','in\x20vec4\x20a_color;','uniform\x20mat4\x20u_MVPmatrix;','uniform\x20mat4\x20u_MVmatrix;','uniform\x20mat4\x20u_NormalPmatrix;','#ifdef\x20UPDATEMATRIXMANAGER','uniform\x20bool\x20ubUseMatrixDatas;','uniform\x20vec4\x20vMatrixDatas[MATRIXDATASCOUNT];','attribute\x20vec3\x20a_matrixIdx;','#endif','out\x20vec3\x20vVertPos;','out\x20vec4\x20vVertPos4;','out\x20vec4\x20vViewPos4;','out\x20vec3\x20vNormalInterp;','out\x20vec4\x20vColor;','void\x20main()\x20{','\x20\x20\x20vec3\x20updatePosition\x20=\x20a_position;','#ifdef\x20UPDATEMATRIXMANAGER','\x20\x20\x20if(ubUseMatrixDatas)\x20{','\x20\x20\x20\x20\x20\x20\x20int\x20idx\x20=\x20int(a_matrixIdx.x)\x20*\x204;','\x20\x20\x20\x20\x20\x20\x20mat4\x20updateModelMatrix\x20=\x20mat4(','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x200],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x201],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x202],','\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMatrixDatas[idx\x20+\x203]);','\x09\x20\x20\x20\x20vec4\x20vUpdatePos4\x20=\x20updateModelMatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09\x20\x20\x20\x20updatePosition\x20=\x20vec3(vUpdatePos4)\x20/\x20vUpdatePos4.w;','\x20\x20\x20}','\x20\x20\x20#endif','\x09vec4\x20position\x20=\x20u_MVPmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x20\x20\x20gl_Position\x20=\x20position;','\x20\x20\x20vViewPos4\x20=\x20position;','\x09vec4\x20vertPos4\x20=\x20u_MVmatrix\x20*\x20vec4(updatePosition,\x201.0);','\x09vVertPos\x20=\x20vec3(vertPos4)\x20/\x20vertPos4.w;','\x20\x20\x20vVertPos4\x20=\x20vertPos4;','\x09vNormalInterp\x20=\x20vec3(u_NormalPmatrix\x20*\x20vec4(a_normal,\x200.0));','\x20\x20\x20vColor\x20=\x20vec4(float(a_color.x)\x20/\x20255.0,\x20float(a_color.y)\x20/\x20255.0,\x20float(a_color.z)\x20/\x20255.0,\x20float(a_color.w)\x20/\x20255.0);','}']['join']('\x0a'),'fragment':['precision\x20highp\x20float;','\x0a#ifdef\x20CLIPPLANE_BOX','uniform\x20vec4\x20vIS1Plane;','uniform\x20vec4\x20vIS2Plane;','uniform\x20vec4\x20vIS3Plane;','uniform\x20vec4\x20vIS4Plane;','uniform\x20vec4\x20vIS5Plane;','uniform\x20vec4\x20vIS6Plane;','\x0a#endif','in\x20vec3\x20vVertPos;','in\x20vec4\x20vVertPos4;','in\x20vec4\x20vViewPos4;','in\x20vec3\x20vNormalInterp;','in\x20vec4\x20vColor;','layout(location\x20=\x200)\x20out\x20vec4\x20viewColor;','layout(location\x20=\x201)\x20out\x20vec4\x20viewPosition;','layout(location\x20=\x202)\x20out\x20vec4\x20viewNormal;','layout(location\x20=\x203)\x20out\x20vec4\x20viewDepth;','void\x20main()\x20{','\x0a#ifdef\x20CLIPPLANE_BOX','\x09float\x20planeSum\x20=\x200.0;','\x09planeSum\x20+=\x20step((vIS1Plane.x*vVertPos.x)\x20+\x20(vIS1Plane.y*vVertPos.y)\x20+\x20(vIS1Plane.z*vVertPos.z)\x20+\x20vIS1Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS2Plane.x*vVertPos.x)\x20+\x20(vIS2Plane.y*vVertPos.y)\x20+\x20(vIS2Plane.z*vVertPos.z)\x20+\x20vIS2Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS3Plane.x*vVertPos.x)\x20+\x20(vIS3Plane.y*vVertPos.y)\x20+\x20(vIS3Plane.z*vVertPos.z)\x20+\x20vIS3Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS4Plane.x*vVertPos.x)\x20+\x20(vIS4Plane.y*vVertPos.y)\x20+\x20(vIS4Plane.z*vVertPos.z)\x20+\x20vIS4Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS5Plane.x*vVertPos.x)\x20+\x20(vIS5Plane.y*vVertPos.y)\x20+\x20(vIS5Plane.z*vVertPos.z)\x20+\x20vIS5Plane.w,\x200.0);','\x09planeSum\x20+=\x20step((vIS6Plane.x*vVertPos.x)\x20+\x20(vIS6Plane.y*vVertPos.y)\x20+\x20(vIS6Plane.z*vVertPos.z)\x20+\x20vIS6Plane.w,\x200.0);','\x09if(planeSum\x20>\x200.0)','\x09{','\x09\x09discard;','\x09\x09return;','\x09}','\x0a#endif','\x20\x20\x20viewPosition\x20=\x20vVertPos4;','\x09vec3\x20normal\x20=\x20vNormalInterp;','\x20\x20\x20viewNormal\x20=\x20vec4(normal,\x201.0);','\x20\x20\x20viewColor\x20=\x20vColor;','\x20\x20\x20float\x20currentDepth\x20=\x20vViewPos4.z\x20/\x20vViewPos4.w;','\x20\x20\x20viewDepth\x20=\x20vec4(currentDepth,\x20currentDepth,\x20currentDepth,\x201.0);','}']['join']('\x0a')}};function c(){a['useWebGL2']&&(b['ShadingLanguage']=b['ShadingLanguage_v2']),b['ShadingLanguage']===undefined&&(b['ShadingLanguage']=b['ShadingLanguage_v1']);}c();};export default ShaderGLSL;